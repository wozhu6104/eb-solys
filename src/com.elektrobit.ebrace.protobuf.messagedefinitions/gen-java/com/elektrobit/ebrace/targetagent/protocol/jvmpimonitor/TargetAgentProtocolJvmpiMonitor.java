// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: target_agent_prot_jvmpi.proto

package com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor;

public final class TargetAgentProtocolJvmpiMonitor {
  private TargetAgentProtocolJvmpiMonitor() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum JvmpiMonitorMessageId
      implements com.google.protobuf.ProtocolMessageEnum {
    JVMPI_MONITOR_MESSAGE_INVALID(0, 0),
    JVMPI_MONITOR_EVT_THREAD_RESOURCE_INFO_ID(1, 1),
    JVMPI_MONITOR_EVT_THREAD_LIFECYCLE_INFO_ID(2, 2),
    JVMPI_MONITOR_EVT_OBJECT_LIFECYCLE_INFO_ID(3, 3),
    JVMPI_MONITOR_EVT_METHOD_CALL_INFO_ID(4, 4),
    ;
    
    public static final int JVMPI_MONITOR_MESSAGE_INVALID_VALUE = 0;
    public static final int JVMPI_MONITOR_EVT_THREAD_RESOURCE_INFO_ID_VALUE = 1;
    public static final int JVMPI_MONITOR_EVT_THREAD_LIFECYCLE_INFO_ID_VALUE = 2;
    public static final int JVMPI_MONITOR_EVT_OBJECT_LIFECYCLE_INFO_ID_VALUE = 3;
    public static final int JVMPI_MONITOR_EVT_METHOD_CALL_INFO_ID_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static JvmpiMonitorMessageId valueOf(int value) {
      switch (value) {
        case 0: return JVMPI_MONITOR_MESSAGE_INVALID;
        case 1: return JVMPI_MONITOR_EVT_THREAD_RESOURCE_INFO_ID;
        case 2: return JVMPI_MONITOR_EVT_THREAD_LIFECYCLE_INFO_ID;
        case 3: return JVMPI_MONITOR_EVT_OBJECT_LIFECYCLE_INFO_ID;
        case 4: return JVMPI_MONITOR_EVT_METHOD_CALL_INFO_ID;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<JvmpiMonitorMessageId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<JvmpiMonitorMessageId>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<JvmpiMonitorMessageId>() {
            public JvmpiMonitorMessageId findValueByNumber(int number) {
              return JvmpiMonitorMessageId.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final JvmpiMonitorMessageId[] VALUES = {
      JVMPI_MONITOR_MESSAGE_INVALID, JVMPI_MONITOR_EVT_THREAD_RESOURCE_INFO_ID, JVMPI_MONITOR_EVT_THREAD_LIFECYCLE_INFO_ID, JVMPI_MONITOR_EVT_OBJECT_LIFECYCLE_INFO_ID, JVMPI_MONITOR_EVT_METHOD_CALL_INFO_ID, 
    };
    
    public static JvmpiMonitorMessageId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private JvmpiMonitorMessageId(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiMonitorMessageId)
  }
  
  public enum JvmpiEntityLifecycleEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    JVMPI_OBJECT_AVAILVABLE(0, 1),
    JVMPI_OBJECT_UNAVAILABLE(1, 2),
    ;
    
    public static final int JVMPI_OBJECT_AVAILVABLE_VALUE = 1;
    public static final int JVMPI_OBJECT_UNAVAILABLE_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static JvmpiEntityLifecycleEvent valueOf(int value) {
      switch (value) {
        case 1: return JVMPI_OBJECT_AVAILVABLE;
        case 2: return JVMPI_OBJECT_UNAVAILABLE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<JvmpiEntityLifecycleEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<JvmpiEntityLifecycleEvent>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<JvmpiEntityLifecycleEvent>() {
            public JvmpiEntityLifecycleEvent findValueByNumber(int number) {
              return JvmpiEntityLifecycleEvent.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final JvmpiEntityLifecycleEvent[] VALUES = {
      JVMPI_OBJECT_AVAILVABLE, JVMPI_OBJECT_UNAVAILABLE, 
    };
    
    public static JvmpiEntityLifecycleEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private JvmpiEntityLifecycleEvent(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiEntityLifecycleEvent)
  }
  
  public interface JvmpiMonitorMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiMonitorMessageId messageId = 1;
    boolean hasMessageId();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId getMessageId();
    
    // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiSystemResourceInfo systemResourceInfo = 2;
    boolean hasSystemResourceInfo();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo getSystemResourceInfo();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfoOrBuilder getSystemResourceInfoOrBuilder();
    
    // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiThreadLifycycleInfo threadLifecycleInfo = 3;
    boolean hasThreadLifecycleInfo();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo getThreadLifecycleInfo();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfoOrBuilder getThreadLifecycleInfoOrBuilder();
    
    // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiObjectLifycycleInfo objectLifecycleInfo = 4;
    boolean hasObjectLifecycleInfo();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo getObjectLifecycleInfo();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfoOrBuilder getObjectLifecycleInfoOrBuilder();
    
    // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiCalledMethodInfo methodCallsInfo = 5;
    boolean hasMethodCallsInfo();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo getMethodCallsInfo();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfoOrBuilder getMethodCallsInfoOrBuilder();
  }
  public static final class JvmpiMonitorMessage extends
      com.google.protobuf.GeneratedMessage
      implements JvmpiMonitorMessageOrBuilder {
    // Use JvmpiMonitorMessage.newBuilder() to construct.
    private JvmpiMonitorMessage(Builder builder) {
      super(builder);
    }
    private JvmpiMonitorMessage(boolean noInit) {}
    
    private static final JvmpiMonitorMessage defaultInstance;
    public static JvmpiMonitorMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public JvmpiMonitorMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMonitorMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMonitorMessage_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiMonitorMessageId messageId = 1;
    public static final int MESSAGEID_FIELD_NUMBER = 1;
    private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId messageId_;
    public boolean hasMessageId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId getMessageId() {
      return messageId_;
    }
    
    // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiSystemResourceInfo systemResourceInfo = 2;
    public static final int SYSTEMRESOURCEINFO_FIELD_NUMBER = 2;
    private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo systemResourceInfo_;
    public boolean hasSystemResourceInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo getSystemResourceInfo() {
      return systemResourceInfo_;
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfoOrBuilder getSystemResourceInfoOrBuilder() {
      return systemResourceInfo_;
    }
    
    // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiThreadLifycycleInfo threadLifecycleInfo = 3;
    public static final int THREADLIFECYCLEINFO_FIELD_NUMBER = 3;
    private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo threadLifecycleInfo_;
    public boolean hasThreadLifecycleInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo getThreadLifecycleInfo() {
      return threadLifecycleInfo_;
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfoOrBuilder getThreadLifecycleInfoOrBuilder() {
      return threadLifecycleInfo_;
    }
    
    // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiObjectLifycycleInfo objectLifecycleInfo = 4;
    public static final int OBJECTLIFECYCLEINFO_FIELD_NUMBER = 4;
    private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo objectLifecycleInfo_;
    public boolean hasObjectLifecycleInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo getObjectLifecycleInfo() {
      return objectLifecycleInfo_;
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfoOrBuilder getObjectLifecycleInfoOrBuilder() {
      return objectLifecycleInfo_;
    }
    
    // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiCalledMethodInfo methodCallsInfo = 5;
    public static final int METHODCALLSINFO_FIELD_NUMBER = 5;
    private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo methodCallsInfo_;
    public boolean hasMethodCallsInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo getMethodCallsInfo() {
      return methodCallsInfo_;
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfoOrBuilder getMethodCallsInfoOrBuilder() {
      return methodCallsInfo_;
    }
    
    private void initFields() {
      messageId_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId.JVMPI_MONITOR_MESSAGE_INVALID;
      systemResourceInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.getDefaultInstance();
      threadLifecycleInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.getDefaultInstance();
      objectLifecycleInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.getDefaultInstance();
      methodCallsInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMessageId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSystemResourceInfo()) {
        if (!getSystemResourceInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasThreadLifecycleInfo()) {
        if (!getThreadLifecycleInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasObjectLifecycleInfo()) {
        if (!getObjectLifecycleInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMethodCallsInfo()) {
        if (!getMethodCallsInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, messageId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, systemResourceInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, threadLifecycleInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, objectLifecycleInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, methodCallsInfo_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageId_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, systemResourceInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, threadLifecycleInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, objectLifecycleInfo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, methodCallsInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMonitorMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMonitorMessage_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSystemResourceInfoFieldBuilder();
          getThreadLifecycleInfoFieldBuilder();
          getObjectLifecycleInfoFieldBuilder();
          getMethodCallsInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        messageId_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId.JVMPI_MONITOR_MESSAGE_INVALID;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (systemResourceInfoBuilder_ == null) {
          systemResourceInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.getDefaultInstance();
        } else {
          systemResourceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (threadLifecycleInfoBuilder_ == null) {
          threadLifecycleInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.getDefaultInstance();
        } else {
          threadLifecycleInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (objectLifecycleInfoBuilder_ == null) {
          objectLifecycleInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.getDefaultInstance();
        } else {
          objectLifecycleInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (methodCallsInfoBuilder_ == null) {
          methodCallsInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.getDefaultInstance();
        } else {
          methodCallsInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage build() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage buildPartial() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage result = new com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageId_ = messageId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (systemResourceInfoBuilder_ == null) {
          result.systemResourceInfo_ = systemResourceInfo_;
        } else {
          result.systemResourceInfo_ = systemResourceInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (threadLifecycleInfoBuilder_ == null) {
          result.threadLifecycleInfo_ = threadLifecycleInfo_;
        } else {
          result.threadLifecycleInfo_ = threadLifecycleInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (objectLifecycleInfoBuilder_ == null) {
          result.objectLifecycleInfo_ = objectLifecycleInfo_;
        } else {
          result.objectLifecycleInfo_ = objectLifecycleInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (methodCallsInfoBuilder_ == null) {
          result.methodCallsInfo_ = methodCallsInfo_;
        } else {
          result.methodCallsInfo_ = methodCallsInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage) {
          return mergeFrom((com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage other) {
        if (other == com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage.getDefaultInstance()) return this;
        if (other.hasMessageId()) {
          setMessageId(other.getMessageId());
        }
        if (other.hasSystemResourceInfo()) {
          mergeSystemResourceInfo(other.getSystemResourceInfo());
        }
        if (other.hasThreadLifecycleInfo()) {
          mergeThreadLifecycleInfo(other.getThreadLifecycleInfo());
        }
        if (other.hasObjectLifecycleInfo()) {
          mergeObjectLifecycleInfo(other.getObjectLifecycleInfo());
        }
        if (other.hasMethodCallsInfo()) {
          mergeMethodCallsInfo(other.getMethodCallsInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMessageId()) {
          
          return false;
        }
        if (hasSystemResourceInfo()) {
          if (!getSystemResourceInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasThreadLifecycleInfo()) {
          if (!getThreadLifecycleInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasObjectLifecycleInfo()) {
          if (!getObjectLifecycleInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasMethodCallsInfo()) {
          if (!getMethodCallsInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId value = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                messageId_ = value;
              }
              break;
            }
            case 18: {
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.Builder subBuilder = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.newBuilder();
              if (hasSystemResourceInfo()) {
                subBuilder.mergeFrom(getSystemResourceInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSystemResourceInfo(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.Builder subBuilder = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.newBuilder();
              if (hasThreadLifecycleInfo()) {
                subBuilder.mergeFrom(getThreadLifecycleInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setThreadLifecycleInfo(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.Builder subBuilder = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.newBuilder();
              if (hasObjectLifecycleInfo()) {
                subBuilder.mergeFrom(getObjectLifecycleInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setObjectLifecycleInfo(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.Builder subBuilder = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.newBuilder();
              if (hasMethodCallsInfo()) {
                subBuilder.mergeFrom(getMethodCallsInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMethodCallsInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiMonitorMessageId messageId = 1;
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId messageId_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId.JVMPI_MONITOR_MESSAGE_INVALID;
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId getMessageId() {
        return messageId_;
      }
      public Builder setMessageId(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        messageId_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessageId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageId_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessageId.JVMPI_MONITOR_MESSAGE_INVALID;
        onChanged();
        return this;
      }
      
      // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiSystemResourceInfo systemResourceInfo = 2;
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo systemResourceInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfoOrBuilder> systemResourceInfoBuilder_;
      public boolean hasSystemResourceInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo getSystemResourceInfo() {
        if (systemResourceInfoBuilder_ == null) {
          return systemResourceInfo_;
        } else {
          return systemResourceInfoBuilder_.getMessage();
        }
      }
      public Builder setSystemResourceInfo(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo value) {
        if (systemResourceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          systemResourceInfo_ = value;
          onChanged();
        } else {
          systemResourceInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setSystemResourceInfo(
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.Builder builderForValue) {
        if (systemResourceInfoBuilder_ == null) {
          systemResourceInfo_ = builderForValue.build();
          onChanged();
        } else {
          systemResourceInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeSystemResourceInfo(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo value) {
        if (systemResourceInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              systemResourceInfo_ != com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.getDefaultInstance()) {
            systemResourceInfo_ =
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.newBuilder(systemResourceInfo_).mergeFrom(value).buildPartial();
          } else {
            systemResourceInfo_ = value;
          }
          onChanged();
        } else {
          systemResourceInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearSystemResourceInfo() {
        if (systemResourceInfoBuilder_ == null) {
          systemResourceInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.getDefaultInstance();
          onChanged();
        } else {
          systemResourceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.Builder getSystemResourceInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSystemResourceInfoFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfoOrBuilder getSystemResourceInfoOrBuilder() {
        if (systemResourceInfoBuilder_ != null) {
          return systemResourceInfoBuilder_.getMessageOrBuilder();
        } else {
          return systemResourceInfo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfoOrBuilder> 
          getSystemResourceInfoFieldBuilder() {
        if (systemResourceInfoBuilder_ == null) {
          systemResourceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfoOrBuilder>(
                  systemResourceInfo_,
                  getParentForChildren(),
                  isClean());
          systemResourceInfo_ = null;
        }
        return systemResourceInfoBuilder_;
      }
      
      // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiThreadLifycycleInfo threadLifecycleInfo = 3;
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo threadLifecycleInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfoOrBuilder> threadLifecycleInfoBuilder_;
      public boolean hasThreadLifecycleInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo getThreadLifecycleInfo() {
        if (threadLifecycleInfoBuilder_ == null) {
          return threadLifecycleInfo_;
        } else {
          return threadLifecycleInfoBuilder_.getMessage();
        }
      }
      public Builder setThreadLifecycleInfo(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo value) {
        if (threadLifecycleInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          threadLifecycleInfo_ = value;
          onChanged();
        } else {
          threadLifecycleInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setThreadLifecycleInfo(
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.Builder builderForValue) {
        if (threadLifecycleInfoBuilder_ == null) {
          threadLifecycleInfo_ = builderForValue.build();
          onChanged();
        } else {
          threadLifecycleInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeThreadLifecycleInfo(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo value) {
        if (threadLifecycleInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              threadLifecycleInfo_ != com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.getDefaultInstance()) {
            threadLifecycleInfo_ =
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.newBuilder(threadLifecycleInfo_).mergeFrom(value).buildPartial();
          } else {
            threadLifecycleInfo_ = value;
          }
          onChanged();
        } else {
          threadLifecycleInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearThreadLifecycleInfo() {
        if (threadLifecycleInfoBuilder_ == null) {
          threadLifecycleInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.getDefaultInstance();
          onChanged();
        } else {
          threadLifecycleInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.Builder getThreadLifecycleInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getThreadLifecycleInfoFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfoOrBuilder getThreadLifecycleInfoOrBuilder() {
        if (threadLifecycleInfoBuilder_ != null) {
          return threadLifecycleInfoBuilder_.getMessageOrBuilder();
        } else {
          return threadLifecycleInfo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfoOrBuilder> 
          getThreadLifecycleInfoFieldBuilder() {
        if (threadLifecycleInfoBuilder_ == null) {
          threadLifecycleInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfoOrBuilder>(
                  threadLifecycleInfo_,
                  getParentForChildren(),
                  isClean());
          threadLifecycleInfo_ = null;
        }
        return threadLifecycleInfoBuilder_;
      }
      
      // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiObjectLifycycleInfo objectLifecycleInfo = 4;
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo objectLifecycleInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfoOrBuilder> objectLifecycleInfoBuilder_;
      public boolean hasObjectLifecycleInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo getObjectLifecycleInfo() {
        if (objectLifecycleInfoBuilder_ == null) {
          return objectLifecycleInfo_;
        } else {
          return objectLifecycleInfoBuilder_.getMessage();
        }
      }
      public Builder setObjectLifecycleInfo(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo value) {
        if (objectLifecycleInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          objectLifecycleInfo_ = value;
          onChanged();
        } else {
          objectLifecycleInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setObjectLifecycleInfo(
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.Builder builderForValue) {
        if (objectLifecycleInfoBuilder_ == null) {
          objectLifecycleInfo_ = builderForValue.build();
          onChanged();
        } else {
          objectLifecycleInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeObjectLifecycleInfo(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo value) {
        if (objectLifecycleInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              objectLifecycleInfo_ != com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.getDefaultInstance()) {
            objectLifecycleInfo_ =
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.newBuilder(objectLifecycleInfo_).mergeFrom(value).buildPartial();
          } else {
            objectLifecycleInfo_ = value;
          }
          onChanged();
        } else {
          objectLifecycleInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearObjectLifecycleInfo() {
        if (objectLifecycleInfoBuilder_ == null) {
          objectLifecycleInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.getDefaultInstance();
          onChanged();
        } else {
          objectLifecycleInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.Builder getObjectLifecycleInfoBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getObjectLifecycleInfoFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfoOrBuilder getObjectLifecycleInfoOrBuilder() {
        if (objectLifecycleInfoBuilder_ != null) {
          return objectLifecycleInfoBuilder_.getMessageOrBuilder();
        } else {
          return objectLifecycleInfo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfoOrBuilder> 
          getObjectLifecycleInfoFieldBuilder() {
        if (objectLifecycleInfoBuilder_ == null) {
          objectLifecycleInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfoOrBuilder>(
                  objectLifecycleInfo_,
                  getParentForChildren(),
                  isClean());
          objectLifecycleInfo_ = null;
        }
        return objectLifecycleInfoBuilder_;
      }
      
      // optional .TargetAgent.Protocol.JvmpiMonitor.JvmpiCalledMethodInfo methodCallsInfo = 5;
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo methodCallsInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfoOrBuilder> methodCallsInfoBuilder_;
      public boolean hasMethodCallsInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo getMethodCallsInfo() {
        if (methodCallsInfoBuilder_ == null) {
          return methodCallsInfo_;
        } else {
          return methodCallsInfoBuilder_.getMessage();
        }
      }
      public Builder setMethodCallsInfo(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo value) {
        if (methodCallsInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          methodCallsInfo_ = value;
          onChanged();
        } else {
          methodCallsInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setMethodCallsInfo(
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.Builder builderForValue) {
        if (methodCallsInfoBuilder_ == null) {
          methodCallsInfo_ = builderForValue.build();
          onChanged();
        } else {
          methodCallsInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeMethodCallsInfo(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo value) {
        if (methodCallsInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              methodCallsInfo_ != com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.getDefaultInstance()) {
            methodCallsInfo_ =
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.newBuilder(methodCallsInfo_).mergeFrom(value).buildPartial();
          } else {
            methodCallsInfo_ = value;
          }
          onChanged();
        } else {
          methodCallsInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearMethodCallsInfo() {
        if (methodCallsInfoBuilder_ == null) {
          methodCallsInfo_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.getDefaultInstance();
          onChanged();
        } else {
          methodCallsInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.Builder getMethodCallsInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getMethodCallsInfoFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfoOrBuilder getMethodCallsInfoOrBuilder() {
        if (methodCallsInfoBuilder_ != null) {
          return methodCallsInfoBuilder_.getMessageOrBuilder();
        } else {
          return methodCallsInfo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfoOrBuilder> 
          getMethodCallsInfoFieldBuilder() {
        if (methodCallsInfoBuilder_ == null) {
          methodCallsInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfoOrBuilder>(
                  methodCallsInfo_,
                  getParentForChildren(),
                  isClean());
          methodCallsInfo_ = null;
        }
        return methodCallsInfoBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiMonitorMessage)
    }
    
    static {
      defaultInstance = new JvmpiMonitorMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiMonitorMessage)
  }
  
  public interface JvmpiSystemResourceInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .TargetAgent.Protocol.JvmpiMonitor.JvmpiThreadResourceInfo threadResourceInfo = 1;
    java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo> 
        getThreadResourceInfoList();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo getThreadResourceInfo(int index);
    int getThreadResourceInfoCount();
    java.util.List<? extends com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfoOrBuilder> 
        getThreadResourceInfoOrBuilderList();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfoOrBuilder getThreadResourceInfoOrBuilder(
        int index);
  }
  public static final class JvmpiSystemResourceInfo extends
      com.google.protobuf.GeneratedMessage
      implements JvmpiSystemResourceInfoOrBuilder {
    // Use JvmpiSystemResourceInfo.newBuilder() to construct.
    private JvmpiSystemResourceInfo(Builder builder) {
      super(builder);
    }
    private JvmpiSystemResourceInfo(boolean noInit) {}
    
    private static final JvmpiSystemResourceInfo defaultInstance;
    public static JvmpiSystemResourceInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public JvmpiSystemResourceInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiSystemResourceInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiSystemResourceInfo_fieldAccessorTable;
    }
    
    // repeated .TargetAgent.Protocol.JvmpiMonitor.JvmpiThreadResourceInfo threadResourceInfo = 1;
    public static final int THREADRESOURCEINFO_FIELD_NUMBER = 1;
    private java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo> threadResourceInfo_;
    public java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo> getThreadResourceInfoList() {
      return threadResourceInfo_;
    }
    public java.util.List<? extends com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfoOrBuilder> 
        getThreadResourceInfoOrBuilderList() {
      return threadResourceInfo_;
    }
    public int getThreadResourceInfoCount() {
      return threadResourceInfo_.size();
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo getThreadResourceInfo(int index) {
      return threadResourceInfo_.get(index);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfoOrBuilder getThreadResourceInfoOrBuilder(
        int index) {
      return threadResourceInfo_.get(index);
    }
    
    private void initFields() {
      threadResourceInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getThreadResourceInfoCount(); i++) {
        if (!getThreadResourceInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < threadResourceInfo_.size(); i++) {
        output.writeMessage(1, threadResourceInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < threadResourceInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, threadResourceInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiSystemResourceInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiSystemResourceInfo_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getThreadResourceInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (threadResourceInfoBuilder_ == null) {
          threadResourceInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          threadResourceInfoBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo build() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo buildPartial() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo result = new com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo(this);
        int from_bitField0_ = bitField0_;
        if (threadResourceInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            threadResourceInfo_ = java.util.Collections.unmodifiableList(threadResourceInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.threadResourceInfo_ = threadResourceInfo_;
        } else {
          result.threadResourceInfo_ = threadResourceInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo) {
          return mergeFrom((com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo other) {
        if (other == com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.getDefaultInstance()) return this;
        if (threadResourceInfoBuilder_ == null) {
          if (!other.threadResourceInfo_.isEmpty()) {
            if (threadResourceInfo_.isEmpty()) {
              threadResourceInfo_ = other.threadResourceInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureThreadResourceInfoIsMutable();
              threadResourceInfo_.addAll(other.threadResourceInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.threadResourceInfo_.isEmpty()) {
            if (threadResourceInfoBuilder_.isEmpty()) {
              threadResourceInfoBuilder_.dispose();
              threadResourceInfoBuilder_ = null;
              threadResourceInfo_ = other.threadResourceInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              threadResourceInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getThreadResourceInfoFieldBuilder() : null;
            } else {
              threadResourceInfoBuilder_.addAllMessages(other.threadResourceInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getThreadResourceInfoCount(); i++) {
          if (!getThreadResourceInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder subBuilder = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addThreadResourceInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .TargetAgent.Protocol.JvmpiMonitor.JvmpiThreadResourceInfo threadResourceInfo = 1;
      private java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo> threadResourceInfo_ =
        java.util.Collections.emptyList();
      private void ensureThreadResourceInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          threadResourceInfo_ = new java.util.ArrayList<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo>(threadResourceInfo_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfoOrBuilder> threadResourceInfoBuilder_;
      
      public java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo> getThreadResourceInfoList() {
        if (threadResourceInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(threadResourceInfo_);
        } else {
          return threadResourceInfoBuilder_.getMessageList();
        }
      }
      public int getThreadResourceInfoCount() {
        if (threadResourceInfoBuilder_ == null) {
          return threadResourceInfo_.size();
        } else {
          return threadResourceInfoBuilder_.getCount();
        }
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo getThreadResourceInfo(int index) {
        if (threadResourceInfoBuilder_ == null) {
          return threadResourceInfo_.get(index);
        } else {
          return threadResourceInfoBuilder_.getMessage(index);
        }
      }
      public Builder setThreadResourceInfo(
          int index, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo value) {
        if (threadResourceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureThreadResourceInfoIsMutable();
          threadResourceInfo_.set(index, value);
          onChanged();
        } else {
          threadResourceInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setThreadResourceInfo(
          int index, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder builderForValue) {
        if (threadResourceInfoBuilder_ == null) {
          ensureThreadResourceInfoIsMutable();
          threadResourceInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          threadResourceInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addThreadResourceInfo(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo value) {
        if (threadResourceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureThreadResourceInfoIsMutable();
          threadResourceInfo_.add(value);
          onChanged();
        } else {
          threadResourceInfoBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addThreadResourceInfo(
          int index, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo value) {
        if (threadResourceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureThreadResourceInfoIsMutable();
          threadResourceInfo_.add(index, value);
          onChanged();
        } else {
          threadResourceInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addThreadResourceInfo(
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder builderForValue) {
        if (threadResourceInfoBuilder_ == null) {
          ensureThreadResourceInfoIsMutable();
          threadResourceInfo_.add(builderForValue.build());
          onChanged();
        } else {
          threadResourceInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addThreadResourceInfo(
          int index, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder builderForValue) {
        if (threadResourceInfoBuilder_ == null) {
          ensureThreadResourceInfoIsMutable();
          threadResourceInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          threadResourceInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllThreadResourceInfo(
          java.lang.Iterable<? extends com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo> values) {
        if (threadResourceInfoBuilder_ == null) {
          ensureThreadResourceInfoIsMutable();
          super.addAll(values, threadResourceInfo_);
          onChanged();
        } else {
          threadResourceInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearThreadResourceInfo() {
        if (threadResourceInfoBuilder_ == null) {
          threadResourceInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          threadResourceInfoBuilder_.clear();
        }
        return this;
      }
      public Builder removeThreadResourceInfo(int index) {
        if (threadResourceInfoBuilder_ == null) {
          ensureThreadResourceInfoIsMutable();
          threadResourceInfo_.remove(index);
          onChanged();
        } else {
          threadResourceInfoBuilder_.remove(index);
        }
        return this;
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder getThreadResourceInfoBuilder(
          int index) {
        return getThreadResourceInfoFieldBuilder().getBuilder(index);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfoOrBuilder getThreadResourceInfoOrBuilder(
          int index) {
        if (threadResourceInfoBuilder_ == null) {
          return threadResourceInfo_.get(index);  } else {
          return threadResourceInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfoOrBuilder> 
           getThreadResourceInfoOrBuilderList() {
        if (threadResourceInfoBuilder_ != null) {
          return threadResourceInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(threadResourceInfo_);
        }
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder addThreadResourceInfoBuilder() {
        return getThreadResourceInfoFieldBuilder().addBuilder(
            com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.getDefaultInstance());
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder addThreadResourceInfoBuilder(
          int index) {
        return getThreadResourceInfoFieldBuilder().addBuilder(
            index, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.getDefaultInstance());
      }
      public java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder> 
           getThreadResourceInfoBuilderList() {
        return getThreadResourceInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfoOrBuilder> 
          getThreadResourceInfoFieldBuilder() {
        if (threadResourceInfoBuilder_ == null) {
          threadResourceInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfoOrBuilder>(
                  threadResourceInfo_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          threadResourceInfo_ = null;
        }
        return threadResourceInfoBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiSystemResourceInfo)
    }
    
    static {
      defaultInstance = new JvmpiSystemResourceInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiSystemResourceInfo)
  }
  
  public interface JvmpiCalledMethodInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo caller = 1;
    boolean hasCaller();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo getCaller();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder getCallerOrBuilder();
    
    // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo callee = 2;
    boolean hasCallee();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo getCallee();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder getCalleeOrBuilder();
    
    // required int64 timeStamp = 3;
    boolean hasTimeStamp();
    long getTimeStamp();
  }
  public static final class JvmpiCalledMethodInfo extends
      com.google.protobuf.GeneratedMessage
      implements JvmpiCalledMethodInfoOrBuilder {
    // Use JvmpiCalledMethodInfo.newBuilder() to construct.
    private JvmpiCalledMethodInfo(Builder builder) {
      super(builder);
    }
    private JvmpiCalledMethodInfo(boolean noInit) {}
    
    private static final JvmpiCalledMethodInfo defaultInstance;
    public static JvmpiCalledMethodInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public JvmpiCalledMethodInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiCalledMethodInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiCalledMethodInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo caller = 1;
    public static final int CALLER_FIELD_NUMBER = 1;
    private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo caller_;
    public boolean hasCaller() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo getCaller() {
      return caller_;
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder getCallerOrBuilder() {
      return caller_;
    }
    
    // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo callee = 2;
    public static final int CALLEE_FIELD_NUMBER = 2;
    private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo callee_;
    public boolean hasCallee() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo getCallee() {
      return callee_;
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder getCalleeOrBuilder() {
      return callee_;
    }
    
    // required int64 timeStamp = 3;
    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private long timeStamp_;
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getTimeStamp() {
      return timeStamp_;
    }
    
    private void initFields() {
      caller_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance();
      callee_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance();
      timeStamp_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasCaller()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCallee()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeStamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCaller().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCallee().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, caller_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, callee_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, timeStamp_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, caller_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, callee_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, timeStamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiCalledMethodInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiCalledMethodInfo_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCallerFieldBuilder();
          getCalleeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (callerBuilder_ == null) {
          caller_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance();
        } else {
          callerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (calleeBuilder_ == null) {
          callee_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance();
        } else {
          calleeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        timeStamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo build() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo buildPartial() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo result = new com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (callerBuilder_ == null) {
          result.caller_ = caller_;
        } else {
          result.caller_ = callerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (calleeBuilder_ == null) {
          result.callee_ = callee_;
        } else {
          result.callee_ = calleeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeStamp_ = timeStamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo) {
          return mergeFrom((com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo other) {
        if (other == com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.getDefaultInstance()) return this;
        if (other.hasCaller()) {
          mergeCaller(other.getCaller());
        }
        if (other.hasCallee()) {
          mergeCallee(other.getCallee());
        }
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasCaller()) {
          
          return false;
        }
        if (!hasCallee()) {
          
          return false;
        }
        if (!hasTimeStamp()) {
          
          return false;
        }
        if (!getCaller().isInitialized()) {
          
          return false;
        }
        if (!getCallee().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder subBuilder = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.newBuilder();
              if (hasCaller()) {
                subBuilder.mergeFrom(getCaller());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCaller(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder subBuilder = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.newBuilder();
              if (hasCallee()) {
                subBuilder.mergeFrom(getCallee());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCallee(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timeStamp_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo caller = 1;
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo caller_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder> callerBuilder_;
      public boolean hasCaller() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo getCaller() {
        if (callerBuilder_ == null) {
          return caller_;
        } else {
          return callerBuilder_.getMessage();
        }
      }
      public Builder setCaller(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo value) {
        if (callerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          caller_ = value;
          onChanged();
        } else {
          callerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCaller(
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder builderForValue) {
        if (callerBuilder_ == null) {
          caller_ = builderForValue.build();
          onChanged();
        } else {
          callerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCaller(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo value) {
        if (callerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              caller_ != com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance()) {
            caller_ =
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.newBuilder(caller_).mergeFrom(value).buildPartial();
          } else {
            caller_ = value;
          }
          onChanged();
        } else {
          callerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCaller() {
        if (callerBuilder_ == null) {
          caller_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance();
          onChanged();
        } else {
          callerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder getCallerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCallerFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder getCallerOrBuilder() {
        if (callerBuilder_ != null) {
          return callerBuilder_.getMessageOrBuilder();
        } else {
          return caller_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder> 
          getCallerFieldBuilder() {
        if (callerBuilder_ == null) {
          callerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder>(
                  caller_,
                  getParentForChildren(),
                  isClean());
          caller_ = null;
        }
        return callerBuilder_;
      }
      
      // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo callee = 2;
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo callee_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder> calleeBuilder_;
      public boolean hasCallee() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo getCallee() {
        if (calleeBuilder_ == null) {
          return callee_;
        } else {
          return calleeBuilder_.getMessage();
        }
      }
      public Builder setCallee(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo value) {
        if (calleeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          callee_ = value;
          onChanged();
        } else {
          calleeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setCallee(
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder builderForValue) {
        if (calleeBuilder_ == null) {
          callee_ = builderForValue.build();
          onChanged();
        } else {
          calleeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeCallee(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo value) {
        if (calleeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              callee_ != com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance()) {
            callee_ =
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.newBuilder(callee_).mergeFrom(value).buildPartial();
          } else {
            callee_ = value;
          }
          onChanged();
        } else {
          calleeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearCallee() {
        if (calleeBuilder_ == null) {
          callee_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance();
          onChanged();
        } else {
          calleeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder getCalleeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCalleeFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder getCalleeOrBuilder() {
        if (calleeBuilder_ != null) {
          return calleeBuilder_.getMessageOrBuilder();
        } else {
          return callee_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder> 
          getCalleeFieldBuilder() {
        if (calleeBuilder_ == null) {
          calleeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder>(
                  callee_,
                  getParentForChildren(),
                  isClean());
          callee_ = null;
        }
        return calleeBuilder_;
      }
      
      // required int64 timeStamp = 3;
      private long timeStamp_ ;
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getTimeStamp() {
        return timeStamp_;
      }
      public Builder setTimeStamp(long value) {
        bitField0_ |= 0x00000004;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeStamp_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiCalledMethodInfo)
    }
    
    static {
      defaultInstance = new JvmpiCalledMethodInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiCalledMethodInfo)
  }
  
  public interface JvmpiMethodInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 methodID = 1;
    boolean hasMethodID();
    long getMethodID();
    
    // optional int64 classID = 2;
    boolean hasClassID();
    long getClassID();
    
    // optional string methodName = 3;
    boolean hasMethodName();
    String getMethodName();
    
    // optional int64 threadID = 4;
    boolean hasThreadID();
    long getThreadID();
  }
  public static final class JvmpiMethodInfo extends
      com.google.protobuf.GeneratedMessage
      implements JvmpiMethodInfoOrBuilder {
    // Use JvmpiMethodInfo.newBuilder() to construct.
    private JvmpiMethodInfo(Builder builder) {
      super(builder);
    }
    private JvmpiMethodInfo(boolean noInit) {}
    
    private static final JvmpiMethodInfo defaultInstance;
    public static JvmpiMethodInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public JvmpiMethodInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMethodInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMethodInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 methodID = 1;
    public static final int METHODID_FIELD_NUMBER = 1;
    private long methodID_;
    public boolean hasMethodID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getMethodID() {
      return methodID_;
    }
    
    // optional int64 classID = 2;
    public static final int CLASSID_FIELD_NUMBER = 2;
    private long classID_;
    public boolean hasClassID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getClassID() {
      return classID_;
    }
    
    // optional string methodName = 3;
    public static final int METHODNAME_FIELD_NUMBER = 3;
    private java.lang.Object methodName_;
    public boolean hasMethodName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getMethodName() {
      java.lang.Object ref = methodName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          methodName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMethodNameBytes() {
      java.lang.Object ref = methodName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        methodName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int64 threadID = 4;
    public static final int THREADID_FIELD_NUMBER = 4;
    private long threadID_;
    public boolean hasThreadID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getThreadID() {
      return threadID_;
    }
    
    private void initFields() {
      methodID_ = 0L;
      classID_ = 0L;
      methodName_ = "";
      threadID_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMethodID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, methodID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, classID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMethodNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, threadID_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, methodID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, classID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMethodNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, threadID_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMethodInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMethodInfo_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        methodID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        classID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        methodName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        threadID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo build() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo buildPartial() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo result = new com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.methodID_ = methodID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.classID_ = classID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.methodName_ = methodName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.threadID_ = threadID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo) {
          return mergeFrom((com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo other) {
        if (other == com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance()) return this;
        if (other.hasMethodID()) {
          setMethodID(other.getMethodID());
        }
        if (other.hasClassID()) {
          setClassID(other.getClassID());
        }
        if (other.hasMethodName()) {
          setMethodName(other.getMethodName());
        }
        if (other.hasThreadID()) {
          setThreadID(other.getThreadID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMethodID()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              methodID_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              classID_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              methodName_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              threadID_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 methodID = 1;
      private long methodID_ ;
      public boolean hasMethodID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getMethodID() {
        return methodID_;
      }
      public Builder setMethodID(long value) {
        bitField0_ |= 0x00000001;
        methodID_ = value;
        onChanged();
        return this;
      }
      public Builder clearMethodID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        methodID_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 classID = 2;
      private long classID_ ;
      public boolean hasClassID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getClassID() {
        return classID_;
      }
      public Builder setClassID(long value) {
        bitField0_ |= 0x00000002;
        classID_ = value;
        onChanged();
        return this;
      }
      public Builder clearClassID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        classID_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string methodName = 3;
      private java.lang.Object methodName_ = "";
      public boolean hasMethodName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getMethodName() {
        java.lang.Object ref = methodName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          methodName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMethodName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        methodName_ = value;
        onChanged();
        return this;
      }
      public Builder clearMethodName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        methodName_ = getDefaultInstance().getMethodName();
        onChanged();
        return this;
      }
      void setMethodName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        methodName_ = value;
        onChanged();
      }
      
      // optional int64 threadID = 4;
      private long threadID_ ;
      public boolean hasThreadID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getThreadID() {
        return threadID_;
      }
      public Builder setThreadID(long value) {
        bitField0_ |= 0x00000008;
        threadID_ = value;
        onChanged();
        return this;
      }
      public Builder clearThreadID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        threadID_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo)
    }
    
    static {
      defaultInstance = new JvmpiMethodInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo)
  }
  
  public interface JvmpiThreadResourceInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 threadID = 1;
    boolean hasThreadID();
    long getThreadID();
    
    // required int64 cpuConsumption = 2;
    boolean hasCpuConsumption();
    long getCpuConsumption();
    
    // required int64 timeStamp = 3;
    boolean hasTimeStamp();
    long getTimeStamp();
  }
  public static final class JvmpiThreadResourceInfo extends
      com.google.protobuf.GeneratedMessage
      implements JvmpiThreadResourceInfoOrBuilder {
    // Use JvmpiThreadResourceInfo.newBuilder() to construct.
    private JvmpiThreadResourceInfo(Builder builder) {
      super(builder);
    }
    private JvmpiThreadResourceInfo(boolean noInit) {}
    
    private static final JvmpiThreadResourceInfo defaultInstance;
    public static JvmpiThreadResourceInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public JvmpiThreadResourceInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadResourceInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadResourceInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 threadID = 1;
    public static final int THREADID_FIELD_NUMBER = 1;
    private long threadID_;
    public boolean hasThreadID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getThreadID() {
      return threadID_;
    }
    
    // required int64 cpuConsumption = 2;
    public static final int CPUCONSUMPTION_FIELD_NUMBER = 2;
    private long cpuConsumption_;
    public boolean hasCpuConsumption() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getCpuConsumption() {
      return cpuConsumption_;
    }
    
    // required int64 timeStamp = 3;
    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private long timeStamp_;
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getTimeStamp() {
      return timeStamp_;
    }
    
    private void initFields() {
      threadID_ = 0L;
      cpuConsumption_ = 0L;
      timeStamp_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasThreadID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCpuConsumption()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeStamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, threadID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, cpuConsumption_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, timeStamp_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, threadID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, cpuConsumption_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, timeStamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadResourceInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadResourceInfo_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        threadID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cpuConsumption_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        timeStamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo build() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo buildPartial() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo result = new com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.threadID_ = threadID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cpuConsumption_ = cpuConsumption_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeStamp_ = timeStamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo) {
          return mergeFrom((com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo other) {
        if (other == com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.getDefaultInstance()) return this;
        if (other.hasThreadID()) {
          setThreadID(other.getThreadID());
        }
        if (other.hasCpuConsumption()) {
          setCpuConsumption(other.getCpuConsumption());
        }
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasThreadID()) {
          
          return false;
        }
        if (!hasCpuConsumption()) {
          
          return false;
        }
        if (!hasTimeStamp()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              threadID_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cpuConsumption_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timeStamp_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 threadID = 1;
      private long threadID_ ;
      public boolean hasThreadID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getThreadID() {
        return threadID_;
      }
      public Builder setThreadID(long value) {
        bitField0_ |= 0x00000001;
        threadID_ = value;
        onChanged();
        return this;
      }
      public Builder clearThreadID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        threadID_ = 0L;
        onChanged();
        return this;
      }
      
      // required int64 cpuConsumption = 2;
      private long cpuConsumption_ ;
      public boolean hasCpuConsumption() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getCpuConsumption() {
        return cpuConsumption_;
      }
      public Builder setCpuConsumption(long value) {
        bitField0_ |= 0x00000002;
        cpuConsumption_ = value;
        onChanged();
        return this;
      }
      public Builder clearCpuConsumption() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cpuConsumption_ = 0L;
        onChanged();
        return this;
      }
      
      // required int64 timeStamp = 3;
      private long timeStamp_ ;
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getTimeStamp() {
        return timeStamp_;
      }
      public Builder setTimeStamp(long value) {
        bitField0_ |= 0x00000004;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeStamp_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiThreadResourceInfo)
    }
    
    static {
      defaultInstance = new JvmpiThreadResourceInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiThreadResourceInfo)
  }
  
  public interface JvmpiThreadLifycycleInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string threadName = 1;
    boolean hasThreadName();
    String getThreadName();
    
    // required int64 threadID = 2;
    boolean hasThreadID();
    long getThreadID();
    
    // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiEntityLifecycleEvent lifecycleEvent = 3;
    boolean hasLifecycleEvent();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent getLifecycleEvent();
    
    // required int64 timeStamp = 4;
    boolean hasTimeStamp();
    long getTimeStamp();
  }
  public static final class JvmpiThreadLifycycleInfo extends
      com.google.protobuf.GeneratedMessage
      implements JvmpiThreadLifycycleInfoOrBuilder {
    // Use JvmpiThreadLifycycleInfo.newBuilder() to construct.
    private JvmpiThreadLifycycleInfo(Builder builder) {
      super(builder);
    }
    private JvmpiThreadLifycycleInfo(boolean noInit) {}
    
    private static final JvmpiThreadLifycycleInfo defaultInstance;
    public static JvmpiThreadLifycycleInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public JvmpiThreadLifycycleInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadLifycycleInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadLifycycleInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string threadName = 1;
    public static final int THREADNAME_FIELD_NUMBER = 1;
    private java.lang.Object threadName_;
    public boolean hasThreadName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getThreadName() {
      java.lang.Object ref = threadName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          threadName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getThreadNameBytes() {
      java.lang.Object ref = threadName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        threadName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int64 threadID = 2;
    public static final int THREADID_FIELD_NUMBER = 2;
    private long threadID_;
    public boolean hasThreadID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getThreadID() {
      return threadID_;
    }
    
    // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiEntityLifecycleEvent lifecycleEvent = 3;
    public static final int LIFECYCLEEVENT_FIELD_NUMBER = 3;
    private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent lifecycleEvent_;
    public boolean hasLifecycleEvent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent getLifecycleEvent() {
      return lifecycleEvent_;
    }
    
    // required int64 timeStamp = 4;
    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private long timeStamp_;
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getTimeStamp() {
      return timeStamp_;
    }
    
    private void initFields() {
      threadName_ = "";
      threadID_ = 0L;
      lifecycleEvent_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent.JVMPI_OBJECT_AVAILVABLE;
      timeStamp_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasThreadID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLifecycleEvent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeStamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getThreadNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, threadID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, lifecycleEvent_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, timeStamp_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getThreadNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, threadID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, lifecycleEvent_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, timeStamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadLifycycleInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadLifycycleInfo_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        threadName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        threadID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        lifecycleEvent_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent.JVMPI_OBJECT_AVAILVABLE;
        bitField0_ = (bitField0_ & ~0x00000004);
        timeStamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo build() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo buildPartial() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo result = new com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.threadName_ = threadName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.threadID_ = threadID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lifecycleEvent_ = lifecycleEvent_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timeStamp_ = timeStamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo) {
          return mergeFrom((com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo other) {
        if (other == com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.getDefaultInstance()) return this;
        if (other.hasThreadName()) {
          setThreadName(other.getThreadName());
        }
        if (other.hasThreadID()) {
          setThreadID(other.getThreadID());
        }
        if (other.hasLifecycleEvent()) {
          setLifecycleEvent(other.getLifecycleEvent());
        }
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasThreadID()) {
          
          return false;
        }
        if (!hasLifecycleEvent()) {
          
          return false;
        }
        if (!hasTimeStamp()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              threadName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              threadID_ = input.readInt64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent value = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                lifecycleEvent_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timeStamp_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string threadName = 1;
      private java.lang.Object threadName_ = "";
      public boolean hasThreadName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getThreadName() {
        java.lang.Object ref = threadName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          threadName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setThreadName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        threadName_ = value;
        onChanged();
        return this;
      }
      public Builder clearThreadName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        threadName_ = getDefaultInstance().getThreadName();
        onChanged();
        return this;
      }
      void setThreadName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        threadName_ = value;
        onChanged();
      }
      
      // required int64 threadID = 2;
      private long threadID_ ;
      public boolean hasThreadID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getThreadID() {
        return threadID_;
      }
      public Builder setThreadID(long value) {
        bitField0_ |= 0x00000002;
        threadID_ = value;
        onChanged();
        return this;
      }
      public Builder clearThreadID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        threadID_ = 0L;
        onChanged();
        return this;
      }
      
      // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiEntityLifecycleEvent lifecycleEvent = 3;
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent lifecycleEvent_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent.JVMPI_OBJECT_AVAILVABLE;
      public boolean hasLifecycleEvent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent getLifecycleEvent() {
        return lifecycleEvent_;
      }
      public Builder setLifecycleEvent(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        lifecycleEvent_ = value;
        onChanged();
        return this;
      }
      public Builder clearLifecycleEvent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lifecycleEvent_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent.JVMPI_OBJECT_AVAILVABLE;
        onChanged();
        return this;
      }
      
      // required int64 timeStamp = 4;
      private long timeStamp_ ;
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getTimeStamp() {
        return timeStamp_;
      }
      public Builder setTimeStamp(long value) {
        bitField0_ |= 0x00000008;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timeStamp_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiThreadLifycycleInfo)
    }
    
    static {
      defaultInstance = new JvmpiThreadLifycycleInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiThreadLifycycleInfo)
  }
  
  public interface JvmpiObjectLifycycleInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiEntityLifecycleEvent lifecycleEvent = 1;
    boolean hasLifecycleEvent();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent getLifecycleEvent();
    
    // required int64 classID = 2;
    boolean hasClassID();
    long getClassID();
    
    // optional string className = 3;
    boolean hasClassName();
    String getClassName();
    
    // repeated .TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo methodInfo = 4;
    java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo> 
        getMethodInfoList();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo getMethodInfo(int index);
    int getMethodInfoCount();
    java.util.List<? extends com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder> 
        getMethodInfoOrBuilderList();
    com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder getMethodInfoOrBuilder(
        int index);
  }
  public static final class JvmpiObjectLifycycleInfo extends
      com.google.protobuf.GeneratedMessage
      implements JvmpiObjectLifycycleInfoOrBuilder {
    // Use JvmpiObjectLifycycleInfo.newBuilder() to construct.
    private JvmpiObjectLifycycleInfo(Builder builder) {
      super(builder);
    }
    private JvmpiObjectLifycycleInfo(boolean noInit) {}
    
    private static final JvmpiObjectLifycycleInfo defaultInstance;
    public static JvmpiObjectLifycycleInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public JvmpiObjectLifycycleInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiObjectLifycycleInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiObjectLifycycleInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiEntityLifecycleEvent lifecycleEvent = 1;
    public static final int LIFECYCLEEVENT_FIELD_NUMBER = 1;
    private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent lifecycleEvent_;
    public boolean hasLifecycleEvent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent getLifecycleEvent() {
      return lifecycleEvent_;
    }
    
    // required int64 classID = 2;
    public static final int CLASSID_FIELD_NUMBER = 2;
    private long classID_;
    public boolean hasClassID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getClassID() {
      return classID_;
    }
    
    // optional string className = 3;
    public static final int CLASSNAME_FIELD_NUMBER = 3;
    private java.lang.Object className_;
    public boolean hasClassName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getClassName() {
      java.lang.Object ref = className_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          className_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getClassNameBytes() {
      java.lang.Object ref = className_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        className_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo methodInfo = 4;
    public static final int METHODINFO_FIELD_NUMBER = 4;
    private java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo> methodInfo_;
    public java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo> getMethodInfoList() {
      return methodInfo_;
    }
    public java.util.List<? extends com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder> 
        getMethodInfoOrBuilderList() {
      return methodInfo_;
    }
    public int getMethodInfoCount() {
      return methodInfo_.size();
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo getMethodInfo(int index) {
      return methodInfo_.get(index);
    }
    public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder getMethodInfoOrBuilder(
        int index) {
      return methodInfo_.get(index);
    }
    
    private void initFields() {
      lifecycleEvent_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent.JVMPI_OBJECT_AVAILVABLE;
      classID_ = 0L;
      className_ = "";
      methodInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasLifecycleEvent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClassID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMethodInfoCount(); i++) {
        if (!getMethodInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, lifecycleEvent_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, classID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getClassNameBytes());
      }
      for (int i = 0; i < methodInfo_.size(); i++) {
        output.writeMessage(4, methodInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, lifecycleEvent_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, classID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getClassNameBytes());
      }
      for (int i = 0; i < methodInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, methodInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiObjectLifycycleInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiObjectLifycycleInfo_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMethodInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        lifecycleEvent_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent.JVMPI_OBJECT_AVAILVABLE;
        bitField0_ = (bitField0_ & ~0x00000001);
        classID_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        className_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (methodInfoBuilder_ == null) {
          methodInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          methodInfoBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo build() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo buildPartial() {
        com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo result = new com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lifecycleEvent_ = lifecycleEvent_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.classID_ = classID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.className_ = className_;
        if (methodInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            methodInfo_ = java.util.Collections.unmodifiableList(methodInfo_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.methodInfo_ = methodInfo_;
        } else {
          result.methodInfo_ = methodInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo) {
          return mergeFrom((com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo other) {
        if (other == com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.getDefaultInstance()) return this;
        if (other.hasLifecycleEvent()) {
          setLifecycleEvent(other.getLifecycleEvent());
        }
        if (other.hasClassID()) {
          setClassID(other.getClassID());
        }
        if (other.hasClassName()) {
          setClassName(other.getClassName());
        }
        if (methodInfoBuilder_ == null) {
          if (!other.methodInfo_.isEmpty()) {
            if (methodInfo_.isEmpty()) {
              methodInfo_ = other.methodInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMethodInfoIsMutable();
              methodInfo_.addAll(other.methodInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.methodInfo_.isEmpty()) {
            if (methodInfoBuilder_.isEmpty()) {
              methodInfoBuilder_.dispose();
              methodInfoBuilder_ = null;
              methodInfo_ = other.methodInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
              methodInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMethodInfoFieldBuilder() : null;
            } else {
              methodInfoBuilder_.addAllMessages(other.methodInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasLifecycleEvent()) {
          
          return false;
        }
        if (!hasClassID()) {
          
          return false;
        }
        for (int i = 0; i < getMethodInfoCount(); i++) {
          if (!getMethodInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent value = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                lifecycleEvent_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              classID_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              className_ = input.readBytes();
              break;
            }
            case 34: {
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder subBuilder = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMethodInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .TargetAgent.Protocol.JvmpiMonitor.JvmpiEntityLifecycleEvent lifecycleEvent = 1;
      private com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent lifecycleEvent_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent.JVMPI_OBJECT_AVAILVABLE;
      public boolean hasLifecycleEvent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent getLifecycleEvent() {
        return lifecycleEvent_;
      }
      public Builder setLifecycleEvent(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        lifecycleEvent_ = value;
        onChanged();
        return this;
      }
      public Builder clearLifecycleEvent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lifecycleEvent_ = com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiEntityLifecycleEvent.JVMPI_OBJECT_AVAILVABLE;
        onChanged();
        return this;
      }
      
      // required int64 classID = 2;
      private long classID_ ;
      public boolean hasClassID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getClassID() {
        return classID_;
      }
      public Builder setClassID(long value) {
        bitField0_ |= 0x00000002;
        classID_ = value;
        onChanged();
        return this;
      }
      public Builder clearClassID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        classID_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string className = 3;
      private java.lang.Object className_ = "";
      public boolean hasClassName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getClassName() {
        java.lang.Object ref = className_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          className_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setClassName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        className_ = value;
        onChanged();
        return this;
      }
      public Builder clearClassName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        className_ = getDefaultInstance().getClassName();
        onChanged();
        return this;
      }
      void setClassName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        className_ = value;
        onChanged();
      }
      
      // repeated .TargetAgent.Protocol.JvmpiMonitor.JvmpiMethodInfo methodInfo = 4;
      private java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo> methodInfo_ =
        java.util.Collections.emptyList();
      private void ensureMethodInfoIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          methodInfo_ = new java.util.ArrayList<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo>(methodInfo_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder> methodInfoBuilder_;
      
      public java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo> getMethodInfoList() {
        if (methodInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(methodInfo_);
        } else {
          return methodInfoBuilder_.getMessageList();
        }
      }
      public int getMethodInfoCount() {
        if (methodInfoBuilder_ == null) {
          return methodInfo_.size();
        } else {
          return methodInfoBuilder_.getCount();
        }
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo getMethodInfo(int index) {
        if (methodInfoBuilder_ == null) {
          return methodInfo_.get(index);
        } else {
          return methodInfoBuilder_.getMessage(index);
        }
      }
      public Builder setMethodInfo(
          int index, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo value) {
        if (methodInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodInfoIsMutable();
          methodInfo_.set(index, value);
          onChanged();
        } else {
          methodInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMethodInfo(
          int index, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder builderForValue) {
        if (methodInfoBuilder_ == null) {
          ensureMethodInfoIsMutable();
          methodInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          methodInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMethodInfo(com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo value) {
        if (methodInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodInfoIsMutable();
          methodInfo_.add(value);
          onChanged();
        } else {
          methodInfoBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMethodInfo(
          int index, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo value) {
        if (methodInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodInfoIsMutable();
          methodInfo_.add(index, value);
          onChanged();
        } else {
          methodInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMethodInfo(
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder builderForValue) {
        if (methodInfoBuilder_ == null) {
          ensureMethodInfoIsMutable();
          methodInfo_.add(builderForValue.build());
          onChanged();
        } else {
          methodInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMethodInfo(
          int index, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder builderForValue) {
        if (methodInfoBuilder_ == null) {
          ensureMethodInfoIsMutable();
          methodInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          methodInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMethodInfo(
          java.lang.Iterable<? extends com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo> values) {
        if (methodInfoBuilder_ == null) {
          ensureMethodInfoIsMutable();
          super.addAll(values, methodInfo_);
          onChanged();
        } else {
          methodInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMethodInfo() {
        if (methodInfoBuilder_ == null) {
          methodInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          methodInfoBuilder_.clear();
        }
        return this;
      }
      public Builder removeMethodInfo(int index) {
        if (methodInfoBuilder_ == null) {
          ensureMethodInfoIsMutable();
          methodInfo_.remove(index);
          onChanged();
        } else {
          methodInfoBuilder_.remove(index);
        }
        return this;
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder getMethodInfoBuilder(
          int index) {
        return getMethodInfoFieldBuilder().getBuilder(index);
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder getMethodInfoOrBuilder(
          int index) {
        if (methodInfoBuilder_ == null) {
          return methodInfo_.get(index);  } else {
          return methodInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder> 
           getMethodInfoOrBuilderList() {
        if (methodInfoBuilder_ != null) {
          return methodInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(methodInfo_);
        }
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder addMethodInfoBuilder() {
        return getMethodInfoFieldBuilder().addBuilder(
            com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance());
      }
      public com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder addMethodInfoBuilder(
          int index) {
        return getMethodInfoFieldBuilder().addBuilder(
            index, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.getDefaultInstance());
      }
      public java.util.List<com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder> 
           getMethodInfoBuilderList() {
        return getMethodInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder> 
          getMethodInfoFieldBuilder() {
        if (methodInfoBuilder_ == null) {
          methodInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder, com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfoOrBuilder>(
                  methodInfo_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          methodInfo_ = null;
        }
        return methodInfoBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiObjectLifycycleInfo)
    }
    
    static {
      defaultInstance = new JvmpiObjectLifycycleInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.JvmpiMonitor.JvmpiObjectLifycycleInfo)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMonitorMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMonitorMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiSystemResourceInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiSystemResourceInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiCalledMethodInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiCalledMethodInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMethodInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMethodInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadResourceInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadResourceInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadLifycycleInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadLifycycleInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiObjectLifycycleInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiObjectLifycycleInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035target_agent_prot_jvmpi.proto\022!TargetA" +
      "gent.Protocol.JvmpiMonitor\"\301\003\n\023JvmpiMoni" +
      "torMessage\022K\n\tmessageId\030\001 \002(\01628.TargetAg" +
      "ent.Protocol.JvmpiMonitor.JvmpiMonitorMe" +
      "ssageId\022V\n\022systemResourceInfo\030\002 \001(\0132:.Ta" +
      "rgetAgent.Protocol.JvmpiMonitor.JvmpiSys" +
      "temResourceInfo\022X\n\023threadLifecycleInfo\030\003" +
      " \001(\0132;.TargetAgent.Protocol.JvmpiMonitor" +
      ".JvmpiThreadLifycycleInfo\022X\n\023objectLifec" +
      "ycleInfo\030\004 \001(\0132;.TargetAgent.Protocol.Jv",
      "mpiMonitor.JvmpiObjectLifycycleInfo\022Q\n\017m" +
      "ethodCallsInfo\030\005 \001(\01328.TargetAgent.Proto" +
      "col.JvmpiMonitor.JvmpiCalledMethodInfo\"q" +
      "\n\027JvmpiSystemResourceInfo\022V\n\022threadResou" +
      "rceInfo\030\001 \003(\0132:.TargetAgent.Protocol.Jvm" +
      "piMonitor.JvmpiThreadResourceInfo\"\262\001\n\025Jv" +
      "mpiCalledMethodInfo\022B\n\006caller\030\001 \002(\01322.Ta" +
      "rgetAgent.Protocol.JvmpiMonitor.JvmpiMet" +
      "hodInfo\022B\n\006callee\030\002 \002(\01322.TargetAgent.Pr" +
      "otocol.JvmpiMonitor.JvmpiMethodInfo\022\021\n\tt",
      "imeStamp\030\003 \002(\003\"Z\n\017JvmpiMethodInfo\022\020\n\010met" +
      "hodID\030\001 \002(\003\022\017\n\007classID\030\002 \001(\003\022\022\n\nmethodNa" +
      "me\030\003 \001(\t\022\020\n\010threadID\030\004 \001(\003\"V\n\027JvmpiThrea" +
      "dResourceInfo\022\020\n\010threadID\030\001 \002(\003\022\026\n\016cpuCo" +
      "nsumption\030\002 \002(\003\022\021\n\ttimeStamp\030\003 \002(\003\"\251\001\n\030J" +
      "vmpiThreadLifycycleInfo\022\022\n\nthreadName\030\001 " +
      "\001(\t\022\020\n\010threadID\030\002 \002(\003\022T\n\016lifecycleEvent\030" +
      "\003 \002(\0162<.TargetAgent.Protocol.JvmpiMonito" +
      "r.JvmpiEntityLifecycleEvent\022\021\n\ttimeStamp" +
      "\030\004 \002(\003\"\334\001\n\030JvmpiObjectLifycycleInfo\022T\n\016l",
      "ifecycleEvent\030\001 \002(\0162<.TargetAgent.Protoc" +
      "ol.JvmpiMonitor.JvmpiEntityLifecycleEven" +
      "t\022\017\n\007classID\030\002 \002(\003\022\021\n\tclassName\030\003 \001(\t\022F\n" +
      "\nmethodInfo\030\004 \003(\01322.TargetAgent.Protocol" +
      ".JvmpiMonitor.JvmpiMethodInfo*\364\001\n\025JvmpiM" +
      "onitorMessageId\022!\n\035JVMPI_MONITOR_MESSAGE" +
      "_INVALID\020\000\022-\n)JVMPI_MONITOR_EVT_THREAD_R" +
      "ESOURCE_INFO_ID\020\001\022.\n*JVMPI_MONITOR_EVT_T" +
      "HREAD_LIFECYCLE_INFO_ID\020\002\022.\n*JVMPI_MONIT" +
      "OR_EVT_OBJECT_LIFECYCLE_INFO_ID\020\003\022)\n%JVM",
      "PI_MONITOR_EVT_METHOD_CALL_INFO_ID\020\004*V\n\031" +
      "JvmpiEntityLifecycleEvent\022\033\n\027JVMPI_OBJEC" +
      "T_AVAILVABLE\020\001\022\034\n\030JVMPI_OBJECT_UNAVAILAB" +
      "LE\020\002BZ\n7com.elektrobit.ebrace.targetagen" +
      "t.protocol.jvmpimonitorB\037TargetAgentProt" +
      "ocolJvmpiMonitor"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMonitorMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMonitorMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMonitorMessage_descriptor,
              new java.lang.String[] { "MessageId", "SystemResourceInfo", "ThreadLifecycleInfo", "ObjectLifecycleInfo", "MethodCallsInfo", },
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage.class,
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMonitorMessage.Builder.class);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiSystemResourceInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiSystemResourceInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiSystemResourceInfo_descriptor,
              new java.lang.String[] { "ThreadResourceInfo", },
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.class,
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiSystemResourceInfo.Builder.class);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiCalledMethodInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiCalledMethodInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiCalledMethodInfo_descriptor,
              new java.lang.String[] { "Caller", "Callee", "TimeStamp", },
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.class,
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiCalledMethodInfo.Builder.class);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMethodInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMethodInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiMethodInfo_descriptor,
              new java.lang.String[] { "MethodID", "ClassID", "MethodName", "ThreadID", },
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.class,
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiMethodInfo.Builder.class);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadResourceInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadResourceInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadResourceInfo_descriptor,
              new java.lang.String[] { "ThreadID", "CpuConsumption", "TimeStamp", },
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.class,
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadResourceInfo.Builder.class);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadLifycycleInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadLifycycleInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiThreadLifycycleInfo_descriptor,
              new java.lang.String[] { "ThreadName", "ThreadID", "LifecycleEvent", "TimeStamp", },
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.class,
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiThreadLifycycleInfo.Builder.class);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiObjectLifycycleInfo_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiObjectLifycycleInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_JvmpiMonitor_JvmpiObjectLifycycleInfo_descriptor,
              new java.lang.String[] { "LifecycleEvent", "ClassID", "ClassName", "MethodInfo", },
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.class,
              com.elektrobit.ebrace.targetagent.protocol.jvmpimonitor.TargetAgentProtocolJvmpiMonitor.JvmpiObjectLifycycleInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
