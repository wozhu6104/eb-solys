// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: target_agent_prot_dlt_monitor_plugin.proto

package com.elektrobit.ebrace.targetagent.protocol.dltloginspector;

public final class TargetAgentProtocolDLTLogInspector {
  private TargetAgentProtocolDLTLogInspector() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum DLTLogInspectorMessageId
      implements com.google.protobuf.ProtocolMessageEnum {
    LOG_ANALYZER_MESSAGE_INVALID(0, 0),
    LOG_ANALYZER_MESSAGE_TRACE(1, 1),
    ;
    
    public static final int LOG_ANALYZER_MESSAGE_INVALID_VALUE = 0;
    public static final int LOG_ANALYZER_MESSAGE_TRACE_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static DLTLogInspectorMessageId valueOf(int value) {
      switch (value) {
        case 0: return LOG_ANALYZER_MESSAGE_INVALID;
        case 1: return LOG_ANALYZER_MESSAGE_TRACE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DLTLogInspectorMessageId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DLTLogInspectorMessageId>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DLTLogInspectorMessageId>() {
            public DLTLogInspectorMessageId findValueByNumber(int number) {
              return DLTLogInspectorMessageId.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final DLTLogInspectorMessageId[] VALUES = {
      LOG_ANALYZER_MESSAGE_INVALID, LOG_ANALYZER_MESSAGE_TRACE, 
    };
    
    public static DLTLogInspectorMessageId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DLTLogInspectorMessageId(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorMessageId)
  }
  
  public enum DLTMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    DLT_TYPE_LOG(0, 0),
    DLT_TYPE_APP_TRACE(1, 1),
    DLT_TYPE_NW_TRACE(2, 2),
    DLT_TYPE_CONTROL(3, 3),
    ;
    
    public static final int DLT_TYPE_LOG_VALUE = 0;
    public static final int DLT_TYPE_APP_TRACE_VALUE = 1;
    public static final int DLT_TYPE_NW_TRACE_VALUE = 2;
    public static final int DLT_TYPE_CONTROL_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static DLTMessageType valueOf(int value) {
      switch (value) {
        case 0: return DLT_TYPE_LOG;
        case 1: return DLT_TYPE_APP_TRACE;
        case 2: return DLT_TYPE_NW_TRACE;
        case 3: return DLT_TYPE_CONTROL;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DLTMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DLTMessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DLTMessageType>() {
            public DLTMessageType findValueByNumber(int number) {
              return DLTMessageType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final DLTMessageType[] VALUES = {
      DLT_TYPE_LOG, DLT_TYPE_APP_TRACE, DLT_TYPE_NW_TRACE, DLT_TYPE_CONTROL, 
    };
    
    public static DLTMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DLTMessageType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:TargetAgent.Protocol.DLTLogInspector.DLTMessageType)
  }
  
  public enum MsgLogInfo
      implements com.google.protobuf.ProtocolMessageEnum {
    DLT_LOG_FATAL(0, 1),
    DLT_LOG_ERROR(1, 2),
    DLT_LOG_WARN(2, 3),
    DLT_LOG_INFO(3, 4),
    DLT_LOG_DEBUG(4, 5),
    DLT_LOG_VERBOSE(5, 6),
    ;
    
    public static final int DLT_LOG_FATAL_VALUE = 1;
    public static final int DLT_LOG_ERROR_VALUE = 2;
    public static final int DLT_LOG_WARN_VALUE = 3;
    public static final int DLT_LOG_INFO_VALUE = 4;
    public static final int DLT_LOG_DEBUG_VALUE = 5;
    public static final int DLT_LOG_VERBOSE_VALUE = 6;
    
    
    public final int getNumber() { return value; }
    
    public static MsgLogInfo valueOf(int value) {
      switch (value) {
        case 1: return DLT_LOG_FATAL;
        case 2: return DLT_LOG_ERROR;
        case 3: return DLT_LOG_WARN;
        case 4: return DLT_LOG_INFO;
        case 5: return DLT_LOG_DEBUG;
        case 6: return DLT_LOG_VERBOSE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<MsgLogInfo>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MsgLogInfo>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgLogInfo>() {
            public MsgLogInfo findValueByNumber(int number) {
              return MsgLogInfo.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final MsgLogInfo[] VALUES = {
      DLT_LOG_FATAL, DLT_LOG_ERROR, DLT_LOG_WARN, DLT_LOG_INFO, DLT_LOG_DEBUG, DLT_LOG_VERBOSE, 
    };
    
    public static MsgLogInfo valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private MsgLogInfo(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:TargetAgent.Protocol.DLTLogInspector.MsgLogInfo)
  }
  
  public enum MsgTraceInfo
      implements com.google.protobuf.ProtocolMessageEnum {
    DLT_TRACE_VARIABLE(0, 1),
    DLT_TRACE_FUNCTION_IN(1, 2),
    DLT_TRACE_FUNCTION_OUT(2, 3),
    DLT_TRACE_STATE(3, 4),
    DLT_TRACE_VFB(4, 5),
    ;
    
    public static final int DLT_TRACE_VARIABLE_VALUE = 1;
    public static final int DLT_TRACE_FUNCTION_IN_VALUE = 2;
    public static final int DLT_TRACE_FUNCTION_OUT_VALUE = 3;
    public static final int DLT_TRACE_STATE_VALUE = 4;
    public static final int DLT_TRACE_VFB_VALUE = 5;
    
    
    public final int getNumber() { return value; }
    
    public static MsgTraceInfo valueOf(int value) {
      switch (value) {
        case 1: return DLT_TRACE_VARIABLE;
        case 2: return DLT_TRACE_FUNCTION_IN;
        case 3: return DLT_TRACE_FUNCTION_OUT;
        case 4: return DLT_TRACE_STATE;
        case 5: return DLT_TRACE_VFB;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<MsgTraceInfo>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MsgTraceInfo>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgTraceInfo>() {
            public MsgTraceInfo findValueByNumber(int number) {
              return MsgTraceInfo.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.getDescriptor().getEnumTypes().get(3);
    }
    
    private static final MsgTraceInfo[] VALUES = {
      DLT_TRACE_VARIABLE, DLT_TRACE_FUNCTION_IN, DLT_TRACE_FUNCTION_OUT, DLT_TRACE_STATE, DLT_TRACE_VFB, 
    };
    
    public static MsgTraceInfo valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private MsgTraceInfo(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:TargetAgent.Protocol.DLTLogInspector.MsgTraceInfo)
  }
  
  public enum MsgBusInfo
      implements com.google.protobuf.ProtocolMessageEnum {
    DLT_NW_TRACE_IPC(0, 1),
    DLT_NW_TRACE_CAN(1, 2),
    DLT_NW_TRACE_FLEXRAY(2, 3),
    DLT_NW_TRACE_MOST(3, 4),
    ;
    
    public static final int DLT_NW_TRACE_IPC_VALUE = 1;
    public static final int DLT_NW_TRACE_CAN_VALUE = 2;
    public static final int DLT_NW_TRACE_FLEXRAY_VALUE = 3;
    public static final int DLT_NW_TRACE_MOST_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static MsgBusInfo valueOf(int value) {
      switch (value) {
        case 1: return DLT_NW_TRACE_IPC;
        case 2: return DLT_NW_TRACE_CAN;
        case 3: return DLT_NW_TRACE_FLEXRAY;
        case 4: return DLT_NW_TRACE_MOST;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<MsgBusInfo>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MsgBusInfo>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgBusInfo>() {
            public MsgBusInfo findValueByNumber(int number) {
              return MsgBusInfo.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.getDescriptor().getEnumTypes().get(4);
    }
    
    private static final MsgBusInfo[] VALUES = {
      DLT_NW_TRACE_IPC, DLT_NW_TRACE_CAN, DLT_NW_TRACE_FLEXRAY, DLT_NW_TRACE_MOST, 
    };
    
    public static MsgBusInfo valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private MsgBusInfo(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:TargetAgent.Protocol.DLTLogInspector.MsgBusInfo)
  }
  
  public enum MsgControlInfo
      implements com.google.protobuf.ProtocolMessageEnum {
    DLT_CONTROL_REQUEST(0, 1),
    DLT_CONTROL_RESPONSE(1, 2),
    DLT_CONTROL_TIME(2, 3),
    ;
    
    public static final int DLT_CONTROL_REQUEST_VALUE = 1;
    public static final int DLT_CONTROL_RESPONSE_VALUE = 2;
    public static final int DLT_CONTROL_TIME_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static MsgControlInfo valueOf(int value) {
      switch (value) {
        case 1: return DLT_CONTROL_REQUEST;
        case 2: return DLT_CONTROL_RESPONSE;
        case 3: return DLT_CONTROL_TIME;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<MsgControlInfo>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MsgControlInfo>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgControlInfo>() {
            public MsgControlInfo findValueByNumber(int number) {
              return MsgControlInfo.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.getDescriptor().getEnumTypes().get(5);
    }
    
    private static final MsgControlInfo[] VALUES = {
      DLT_CONTROL_REQUEST, DLT_CONTROL_RESPONSE, DLT_CONTROL_TIME, 
    };
    
    public static MsgControlInfo valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private MsgControlInfo(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:TargetAgent.Protocol.DLTLogInspector.MsgControlInfo)
  }
  
  public interface DLTLogInspectorMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorMessageId id = 1;
    boolean hasId();
    com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId getId();
    
    // optional .TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorTraceMessage trace_message = 2;
    boolean hasTraceMessage();
    com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage getTraceMessage();
    com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessageOrBuilder getTraceMessageOrBuilder();
  }
  public static final class DLTLogInspectorMessage extends
      com.google.protobuf.GeneratedMessage
      implements DLTLogInspectorMessageOrBuilder {
    // Use DLTLogInspectorMessage.newBuilder() to construct.
    private DLTLogInspectorMessage(Builder builder) {
      super(builder);
    }
    private DLTLogInspectorMessage(boolean noInit) {}
    
    private static final DLTLogInspectorMessage defaultInstance;
    public static DLTLogInspectorMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public DLTLogInspectorMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorMessage_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorMessageId id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId getId() {
      return id_;
    }
    
    // optional .TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorTraceMessage trace_message = 2;
    public static final int TRACE_MESSAGE_FIELD_NUMBER = 2;
    private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage traceMessage_;
    public boolean hasTraceMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage getTraceMessage() {
      return traceMessage_;
    }
    public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessageOrBuilder getTraceMessageOrBuilder() {
      return traceMessage_;
    }
    
    private void initFields() {
      id_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId.LOG_ANALYZER_MESSAGE_INVALID;
      traceMessage_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTraceMessage()) {
        if (!getTraceMessage().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, id_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, traceMessage_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, id_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, traceMessage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorMessage_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTraceMessageFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId.LOG_ANALYZER_MESSAGE_INVALID;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (traceMessageBuilder_ == null) {
          traceMessage_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.getDefaultInstance();
        } else {
          traceMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage build() {
        com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage buildPartial() {
        com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage result = new com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (traceMessageBuilder_ == null) {
          result.traceMessage_ = traceMessage_;
        } else {
          result.traceMessage_ = traceMessageBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage) {
          return mergeFrom((com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage other) {
        if (other == com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTraceMessage()) {
          mergeTraceMessage(other.getTraceMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (hasTraceMessage()) {
          if (!getTraceMessage().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId value = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                id_ = value;
              }
              break;
            }
            case 18: {
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.Builder subBuilder = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.newBuilder();
              if (hasTraceMessage()) {
                subBuilder.mergeFrom(getTraceMessage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTraceMessage(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorMessageId id = 1;
      private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId id_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId.LOG_ANALYZER_MESSAGE_INVALID;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId getId() {
        return id_;
      }
      public Builder setId(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessageId.LOG_ANALYZER_MESSAGE_INVALID;
        onChanged();
        return this;
      }
      
      // optional .TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorTraceMessage trace_message = 2;
      private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage traceMessage_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage, com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.Builder, com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessageOrBuilder> traceMessageBuilder_;
      public boolean hasTraceMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage getTraceMessage() {
        if (traceMessageBuilder_ == null) {
          return traceMessage_;
        } else {
          return traceMessageBuilder_.getMessage();
        }
      }
      public Builder setTraceMessage(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage value) {
        if (traceMessageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          traceMessage_ = value;
          onChanged();
        } else {
          traceMessageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setTraceMessage(
          com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.Builder builderForValue) {
        if (traceMessageBuilder_ == null) {
          traceMessage_ = builderForValue.build();
          onChanged();
        } else {
          traceMessageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeTraceMessage(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage value) {
        if (traceMessageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              traceMessage_ != com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.getDefaultInstance()) {
            traceMessage_ =
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.newBuilder(traceMessage_).mergeFrom(value).buildPartial();
          } else {
            traceMessage_ = value;
          }
          onChanged();
        } else {
          traceMessageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearTraceMessage() {
        if (traceMessageBuilder_ == null) {
          traceMessage_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.getDefaultInstance();
          onChanged();
        } else {
          traceMessageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.Builder getTraceMessageBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTraceMessageFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessageOrBuilder getTraceMessageOrBuilder() {
        if (traceMessageBuilder_ != null) {
          return traceMessageBuilder_.getMessageOrBuilder();
        } else {
          return traceMessage_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage, com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.Builder, com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessageOrBuilder> 
          getTraceMessageFieldBuilder() {
        if (traceMessageBuilder_ == null) {
          traceMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage, com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.Builder, com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessageOrBuilder>(
                  traceMessage_,
                  getParentForChildren(),
                  isClean());
          traceMessage_ = null;
        }
        return traceMessageBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorMessage)
    }
    
    static {
      defaultInstance = new DLTLogInspectorMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorMessage)
  }
  
  public interface DLTLogInspectorTraceMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string timestamp = 1;
    boolean hasTimestamp();
    String getTimestamp();
    
    // required .TargetAgent.Protocol.DLTLogInspector.DLTMessageType messageType = 2;
    boolean hasMessageType();
    com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType getMessageType();
    
    // optional .TargetAgent.Protocol.DLTLogInspector.MsgLogInfo logInfo = 3;
    boolean hasLogInfo();
    com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo getLogInfo();
    
    // optional .TargetAgent.Protocol.DLTLogInspector.MsgTraceInfo traceInfo = 4;
    boolean hasTraceInfo();
    com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo getTraceInfo();
    
    // optional .TargetAgent.Protocol.DLTLogInspector.MsgBusInfo busInfo = 5;
    boolean hasBusInfo();
    com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo getBusInfo();
    
    // optional .TargetAgent.Protocol.DLTLogInspector.MsgControlInfo controlInfo = 6;
    boolean hasControlInfo();
    com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo getControlInfo();
    
    // optional string channel = 7;
    boolean hasChannel();
    String getChannel();
    
    // required string data = 8;
    boolean hasData();
    String getData();
    
    // optional string context = 9;
    boolean hasContext();
    String getContext();
  }
  public static final class DLTLogInspectorTraceMessage extends
      com.google.protobuf.GeneratedMessage
      implements DLTLogInspectorTraceMessageOrBuilder {
    // Use DLTLogInspectorTraceMessage.newBuilder() to construct.
    private DLTLogInspectorTraceMessage(Builder builder) {
      super(builder);
    }
    private DLTLogInspectorTraceMessage(boolean noInit) {}
    
    private static final DLTLogInspectorTraceMessage defaultInstance;
    public static DLTLogInspectorTraceMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public DLTLogInspectorTraceMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorTraceMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorTraceMessage_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private java.lang.Object timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getTimestamp() {
      java.lang.Object ref = timestamp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          timestamp_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTimestampBytes() {
      java.lang.Object ref = timestamp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        timestamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .TargetAgent.Protocol.DLTLogInspector.DLTMessageType messageType = 2;
    public static final int MESSAGETYPE_FIELD_NUMBER = 2;
    private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType messageType_;
    public boolean hasMessageType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType getMessageType() {
      return messageType_;
    }
    
    // optional .TargetAgent.Protocol.DLTLogInspector.MsgLogInfo logInfo = 3;
    public static final int LOGINFO_FIELD_NUMBER = 3;
    private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo logInfo_;
    public boolean hasLogInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo getLogInfo() {
      return logInfo_;
    }
    
    // optional .TargetAgent.Protocol.DLTLogInspector.MsgTraceInfo traceInfo = 4;
    public static final int TRACEINFO_FIELD_NUMBER = 4;
    private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo traceInfo_;
    public boolean hasTraceInfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo getTraceInfo() {
      return traceInfo_;
    }
    
    // optional .TargetAgent.Protocol.DLTLogInspector.MsgBusInfo busInfo = 5;
    public static final int BUSINFO_FIELD_NUMBER = 5;
    private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo busInfo_;
    public boolean hasBusInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo getBusInfo() {
      return busInfo_;
    }
    
    // optional .TargetAgent.Protocol.DLTLogInspector.MsgControlInfo controlInfo = 6;
    public static final int CONTROLINFO_FIELD_NUMBER = 6;
    private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo controlInfo_;
    public boolean hasControlInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo getControlInfo() {
      return controlInfo_;
    }
    
    // optional string channel = 7;
    public static final int CHANNEL_FIELD_NUMBER = 7;
    private java.lang.Object channel_;
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getChannel() {
      java.lang.Object ref = channel_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          channel_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getChannelBytes() {
      java.lang.Object ref = channel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        channel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string data = 8;
    public static final int DATA_FIELD_NUMBER = 8;
    private java.lang.Object data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getData() {
      java.lang.Object ref = data_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          data_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDataBytes() {
      java.lang.Object ref = data_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        data_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string context = 9;
    public static final int CONTEXT_FIELD_NUMBER = 9;
    private java.lang.Object context_;
    public boolean hasContext() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getContext() {
      java.lang.Object ref = context_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          context_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getContextBytes() {
      java.lang.Object ref = context_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        context_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      timestamp_ = "";
      messageType_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType.DLT_TYPE_LOG;
      logInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo.DLT_LOG_FATAL;
      traceInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo.DLT_TRACE_VARIABLE;
      busInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo.DLT_NW_TRACE_IPC;
      controlInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo.DLT_CONTROL_REQUEST;
      channel_ = "";
      data_ = "";
      context_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMessageType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTimestampBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, messageType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, logInfo_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, traceInfo_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, busInfo_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, controlInfo_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getChannelBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getDataBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getContextBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTimestampBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, messageType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, logInfo_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, traceInfo_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, busInfo_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, controlInfo_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getChannelBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getDataBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getContextBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorTraceMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorTraceMessage_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        timestamp_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        messageType_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType.DLT_TYPE_LOG;
        bitField0_ = (bitField0_ & ~0x00000002);
        logInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo.DLT_LOG_FATAL;
        bitField0_ = (bitField0_ & ~0x00000004);
        traceInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo.DLT_TRACE_VARIABLE;
        bitField0_ = (bitField0_ & ~0x00000008);
        busInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo.DLT_NW_TRACE_IPC;
        bitField0_ = (bitField0_ & ~0x00000010);
        controlInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo.DLT_CONTROL_REQUEST;
        bitField0_ = (bitField0_ & ~0x00000020);
        channel_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        data_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        context_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage build() {
        com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage buildPartial() {
        com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage result = new com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.messageType_ = messageType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.logInfo_ = logInfo_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.traceInfo_ = traceInfo_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.busInfo_ = busInfo_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.controlInfo_ = controlInfo_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.context_ = context_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage) {
          return mergeFrom((com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage other) {
        if (other == com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasLogInfo()) {
          setLogInfo(other.getLogInfo());
        }
        if (other.hasTraceInfo()) {
          setTraceInfo(other.getTraceInfo());
        }
        if (other.hasBusInfo()) {
          setBusInfo(other.getBusInfo());
        }
        if (other.hasControlInfo()) {
          setControlInfo(other.getControlInfo());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasContext()) {
          setContext(other.getContext());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMessageType()) {
          
          return false;
        }
        if (!hasData()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType value = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                messageType_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo value = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                logInfo_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo value = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                traceInfo_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo value = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                busInfo_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo value = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                controlInfo_ = value;
              }
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              channel_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              data_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              context_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string timestamp = 1;
      private java.lang.Object timestamp_ = "";
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getTimestamp() {
        java.lang.Object ref = timestamp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          timestamp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTimestamp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = getDefaultInstance().getTimestamp();
        onChanged();
        return this;
      }
      void setTimestamp(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
      }
      
      // required .TargetAgent.Protocol.DLTLogInspector.DLTMessageType messageType = 2;
      private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType messageType_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType.DLT_TYPE_LOG;
      public boolean hasMessageType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType getMessageType() {
        return messageType_;
      }
      public Builder setMessageType(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        messageType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessageType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        messageType_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTMessageType.DLT_TYPE_LOG;
        onChanged();
        return this;
      }
      
      // optional .TargetAgent.Protocol.DLTLogInspector.MsgLogInfo logInfo = 3;
      private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo logInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo.DLT_LOG_FATAL;
      public boolean hasLogInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo getLogInfo() {
        return logInfo_;
      }
      public Builder setLogInfo(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        logInfo_ = value;
        onChanged();
        return this;
      }
      public Builder clearLogInfo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        logInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgLogInfo.DLT_LOG_FATAL;
        onChanged();
        return this;
      }
      
      // optional .TargetAgent.Protocol.DLTLogInspector.MsgTraceInfo traceInfo = 4;
      private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo traceInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo.DLT_TRACE_VARIABLE;
      public boolean hasTraceInfo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo getTraceInfo() {
        return traceInfo_;
      }
      public Builder setTraceInfo(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        traceInfo_ = value;
        onChanged();
        return this;
      }
      public Builder clearTraceInfo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        traceInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgTraceInfo.DLT_TRACE_VARIABLE;
        onChanged();
        return this;
      }
      
      // optional .TargetAgent.Protocol.DLTLogInspector.MsgBusInfo busInfo = 5;
      private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo busInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo.DLT_NW_TRACE_IPC;
      public boolean hasBusInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo getBusInfo() {
        return busInfo_;
      }
      public Builder setBusInfo(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        busInfo_ = value;
        onChanged();
        return this;
      }
      public Builder clearBusInfo() {
        bitField0_ = (bitField0_ & ~0x00000010);
        busInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgBusInfo.DLT_NW_TRACE_IPC;
        onChanged();
        return this;
      }
      
      // optional .TargetAgent.Protocol.DLTLogInspector.MsgControlInfo controlInfo = 6;
      private com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo controlInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo.DLT_CONTROL_REQUEST;
      public boolean hasControlInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo getControlInfo() {
        return controlInfo_;
      }
      public Builder setControlInfo(com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        controlInfo_ = value;
        onChanged();
        return this;
      }
      public Builder clearControlInfo() {
        bitField0_ = (bitField0_ & ~0x00000020);
        controlInfo_ = com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.MsgControlInfo.DLT_CONTROL_REQUEST;
        onChanged();
        return this;
      }
      
      // optional string channel = 7;
      private java.lang.Object channel_ = "";
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getChannel() {
        java.lang.Object ref = channel_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          channel_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setChannel(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        channel_ = value;
        onChanged();
        return this;
      }
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000040);
        channel_ = getDefaultInstance().getChannel();
        onChanged();
        return this;
      }
      void setChannel(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        channel_ = value;
        onChanged();
      }
      
      // required string data = 8;
      private java.lang.Object data_ = "";
      public boolean hasData() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getData() {
        java.lang.Object ref = data_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          data_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setData(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        data_ = value;
        onChanged();
        return this;
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000080);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      void setData(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        data_ = value;
        onChanged();
      }
      
      // optional string context = 9;
      private java.lang.Object context_ = "";
      public boolean hasContext() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getContext() {
        java.lang.Object ref = context_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          context_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setContext(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        context_ = value;
        onChanged();
        return this;
      }
      public Builder clearContext() {
        bitField0_ = (bitField0_ & ~0x00000100);
        context_ = getDefaultInstance().getContext();
        onChanged();
        return this;
      }
      void setContext(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        context_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorTraceMessage)
    }
    
    static {
      defaultInstance = new DLTLogInspectorTraceMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.DLTLogInspector.DLTLogInspectorTraceMessage)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorTraceMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorTraceMessage_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*target_agent_prot_dlt_monitor_plugin.p" +
      "roto\022$TargetAgent.Protocol.DLTLogInspect" +
      "or\"\276\001\n\026DLTLogInspectorMessage\022J\n\002id\030\001 \002(" +
      "\0162>.TargetAgent.Protocol.DLTLogInspector" +
      ".DLTLogInspectorMessageId\022X\n\rtrace_messa" +
      "ge\030\002 \001(\0132A.TargetAgent.Protocol.DLTLogIn" +
      "spector.DLTLogInspectorTraceMessage\"\303\003\n\033" +
      "DLTLogInspectorTraceMessage\022\021\n\ttimestamp" +
      "\030\001 \001(\t\022I\n\013messageType\030\002 \002(\01624.TargetAgen" +
      "t.Protocol.DLTLogInspector.DLTMessageTyp",
      "e\022A\n\007logInfo\030\003 \001(\01620.TargetAgent.Protoco" +
      "l.DLTLogInspector.MsgLogInfo\022E\n\ttraceInf" +
      "o\030\004 \001(\01622.TargetAgent.Protocol.DLTLogIns" +
      "pector.MsgTraceInfo\022A\n\007busInfo\030\005 \001(\01620.T" +
      "argetAgent.Protocol.DLTLogInspector.MsgB" +
      "usInfo\022I\n\013controlInfo\030\006 \001(\01624.TargetAgen" +
      "t.Protocol.DLTLogInspector.MsgControlInf" +
      "o\022\017\n\007channel\030\007 \001(\t\022\014\n\004data\030\010 \002(\t\022\017\n\007cont" +
      "ext\030\t \001(\t*\\\n\030DLTLogInspectorMessageId\022 \n" +
      "\034LOG_ANALYZER_MESSAGE_INVALID\020\000\022\036\n\032LOG_A",
      "NALYZER_MESSAGE_TRACE\020\001*g\n\016DLTMessageTyp" +
      "e\022\020\n\014DLT_TYPE_LOG\020\000\022\026\n\022DLT_TYPE_APP_TRAC" +
      "E\020\001\022\025\n\021DLT_TYPE_NW_TRACE\020\002\022\024\n\020DLT_TYPE_C" +
      "ONTROL\020\003*~\n\nMsgLogInfo\022\021\n\rDLT_LOG_FATAL\020" +
      "\001\022\021\n\rDLT_LOG_ERROR\020\002\022\020\n\014DLT_LOG_WARN\020\003\022\020" +
      "\n\014DLT_LOG_INFO\020\004\022\021\n\rDLT_LOG_DEBUG\020\005\022\023\n\017D" +
      "LT_LOG_VERBOSE\020\006*\205\001\n\014MsgTraceInfo\022\026\n\022DLT" +
      "_TRACE_VARIABLE\020\001\022\031\n\025DLT_TRACE_FUNCTION_" +
      "IN\020\002\022\032\n\026DLT_TRACE_FUNCTION_OUT\020\003\022\023\n\017DLT_" +
      "TRACE_STATE\020\004\022\021\n\rDLT_TRACE_VFB\020\005*i\n\nMsgB",
      "usInfo\022\024\n\020DLT_NW_TRACE_IPC\020\001\022\024\n\020DLT_NW_T" +
      "RACE_CAN\020\002\022\030\n\024DLT_NW_TRACE_FLEXRAY\020\003\022\025\n\021" +
      "DLT_NW_TRACE_MOST\020\004*Y\n\016MsgControlInfo\022\027\n" +
      "\023DLT_CONTROL_REQUEST\020\001\022\030\n\024DLT_CONTROL_RE" +
      "SPONSE\020\002\022\024\n\020DLT_CONTROL_TIME\020\003B`\n:com.el" +
      "ektrobit.ebrace.targetagent.protocol.dlt" +
      "loginspectorB\"TargetAgentProtocolDLTLogI" +
      "nspector"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorMessage_descriptor,
              new java.lang.String[] { "Id", "TraceMessage", },
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage.class,
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorMessage.Builder.class);
          internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorTraceMessage_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorTraceMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_DLTLogInspector_DLTLogInspectorTraceMessage_descriptor,
              new java.lang.String[] { "Timestamp", "MessageType", "LogInfo", "TraceInfo", "BusInfo", "ControlInfo", "Channel", "Data", "Context", },
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.class,
              com.elektrobit.ebrace.targetagent.protocol.dltloginspector.TargetAgentProtocolDLTLogInspector.DLTLogInspectorTraceMessage.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
