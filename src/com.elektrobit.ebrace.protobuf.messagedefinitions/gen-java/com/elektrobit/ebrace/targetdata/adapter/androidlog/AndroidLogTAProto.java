/*******************************************************************************
 * Copyright (C) 2018 Elektrobit Automotive GmbH
 * 
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * 
 * SPDX-License-Identifier: EPL-2.0
 ******************************************************************************/
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: target_agent_prot_androidlog_plugin.proto

package com.elektrobit.ebrace.targetdata.adapter.androidlog;

public final class AndroidLogTAProto {
  private AndroidLogTAProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum OutputFormat
      implements com.google.protobuf.ProtocolMessageEnum {
    BRIEF(0, 0),
    LONG(1, 1),
    PROCESS(2, 2),
    RAW(3, 3),
    TAG(4, 4),
    THREAD(5, 5),
    THREADTIME(6, 6),
    TIME(7, 7),
    ;
    
    public static final int BRIEF_VALUE = 0;
    public static final int LONG_VALUE = 1;
    public static final int PROCESS_VALUE = 2;
    public static final int RAW_VALUE = 3;
    public static final int TAG_VALUE = 4;
    public static final int THREAD_VALUE = 5;
    public static final int THREADTIME_VALUE = 6;
    public static final int TIME_VALUE = 7;
    
    
    public final int getNumber() { return value; }
    
    public static OutputFormat valueOf(int value) {
      switch (value) {
        case 0: return BRIEF;
        case 1: return LONG;
        case 2: return PROCESS;
        case 3: return RAW;
        case 4: return TAG;
        case 5: return THREAD;
        case 6: return THREADTIME;
        case 7: return TIME;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<OutputFormat>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<OutputFormat>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OutputFormat>() {
            public OutputFormat findValueByNumber(int number) {
              return OutputFormat.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final OutputFormat[] VALUES = {
      BRIEF, LONG, PROCESS, RAW, TAG, THREAD, THREADTIME, TIME, 
    };
    
    public static OutputFormat valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private OutputFormat(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:TargetAgent.Protocol.AndroidLog.OutputFormat)
  }
  
  public enum Modifier
      implements com.google.protobuf.ProtocolMessageEnum {
    EPOCH(0, 0),
    MONOTONIC(1, 1),
    PRINTABLE(2, 2),
    UID(3, 3),
    USEC(4, 4),
    UTC(5, 5),
    YEAR(6, 6),
    ZONE(7, 7),
    ;
    
    public static final int EPOCH_VALUE = 0;
    public static final int MONOTONIC_VALUE = 1;
    public static final int PRINTABLE_VALUE = 2;
    public static final int UID_VALUE = 3;
    public static final int USEC_VALUE = 4;
    public static final int UTC_VALUE = 5;
    public static final int YEAR_VALUE = 6;
    public static final int ZONE_VALUE = 7;
    
    
    public final int getNumber() { return value; }
    
    public static Modifier valueOf(int value) {
      switch (value) {
        case 0: return EPOCH;
        case 1: return MONOTONIC;
        case 2: return PRINTABLE;
        case 3: return UID;
        case 4: return USEC;
        case 5: return UTC;
        case 6: return YEAR;
        case 7: return ZONE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Modifier>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Modifier>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Modifier>() {
            public Modifier findValueByNumber(int number) {
              return Modifier.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final Modifier[] VALUES = {
      EPOCH, MONOTONIC, PRINTABLE, UID, USEC, UTC, YEAR, ZONE, 
    };
    
    public static Modifier valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private Modifier(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:TargetAgent.Protocol.AndroidLog.Modifier)
  }
  
  public interface LogHeaderOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .TargetAgent.Protocol.AndroidLog.OutputFormat format = 1 [default = THREADTIME];
    boolean hasFormat();
    com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat getFormat();
    
    // repeated .TargetAgent.Protocol.AndroidLog.Modifier modifiers = 2;
    java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier> getModifiersList();
    int getModifiersCount();
    com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier getModifiers(int index);
  }
  public static final class LogHeader extends
      com.google.protobuf.GeneratedMessage
      implements LogHeaderOrBuilder {
    // Use LogHeader.newBuilder() to construct.
    private LogHeader(Builder builder) {
      super(builder);
    }
    private LogHeader(boolean noInit) {}
    
    private static final LogHeader defaultInstance;
    public static LogHeader getDefaultInstance() {
      return defaultInstance;
    }
    
    public LogHeader getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogHeader_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogHeader_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .TargetAgent.Protocol.AndroidLog.OutputFormat format = 1 [default = THREADTIME];
    public static final int FORMAT_FIELD_NUMBER = 1;
    private com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat format_;
    public boolean hasFormat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat getFormat() {
      return format_;
    }
    
    // repeated .TargetAgent.Protocol.AndroidLog.Modifier modifiers = 2;
    public static final int MODIFIERS_FIELD_NUMBER = 2;
    private java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier> modifiers_;
    public java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier> getModifiersList() {
      return modifiers_;
    }
    public int getModifiersCount() {
      return modifiers_.size();
    }
    public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier getModifiers(int index) {
      return modifiers_.get(index);
    }
    
    private void initFields() {
      format_ = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat.THREADTIME;
      modifiers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, format_.getNumber());
      }
      for (int i = 0; i < modifiers_.size(); i++) {
        output.writeEnum(2, modifiers_.get(i).getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, format_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < modifiers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(modifiers_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * modifiers_.size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogHeader_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogHeader_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        format_ = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat.THREADTIME;
        bitField0_ = (bitField0_ & ~0x00000001);
        modifiers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader build() {
        com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader buildPartial() {
        com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader result = new com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.format_ = format_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          modifiers_ = java.util.Collections.unmodifiableList(modifiers_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.modifiers_ = modifiers_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader) {
          return mergeFrom((com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader other) {
        if (other == com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.getDefaultInstance()) return this;
        if (other.hasFormat()) {
          setFormat(other.getFormat());
        }
        if (!other.modifiers_.isEmpty()) {
          if (modifiers_.isEmpty()) {
            modifiers_ = other.modifiers_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureModifiersIsMutable();
            modifiers_.addAll(other.modifiers_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat value = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                format_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier value = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                addModifiers(value);
              }
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier value = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  addModifiers(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .TargetAgent.Protocol.AndroidLog.OutputFormat format = 1 [default = THREADTIME];
      private com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat format_ = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat.THREADTIME;
      public boolean hasFormat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat getFormat() {
        return format_;
      }
      public Builder setFormat(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        format_ = value;
        onChanged();
        return this;
      }
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        format_ = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.OutputFormat.THREADTIME;
        onChanged();
        return this;
      }
      
      // repeated .TargetAgent.Protocol.AndroidLog.Modifier modifiers = 2;
      private java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier> modifiers_ =
        java.util.Collections.emptyList();
      private void ensureModifiersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          modifiers_ = new java.util.ArrayList<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier>(modifiers_);
          bitField0_ |= 0x00000002;
        }
      }
      public java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier> getModifiersList() {
        return java.util.Collections.unmodifiableList(modifiers_);
      }
      public int getModifiersCount() {
        return modifiers_.size();
      }
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier getModifiers(int index) {
        return modifiers_.get(index);
      }
      public Builder setModifiers(
          int index, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureModifiersIsMutable();
        modifiers_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addModifiers(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureModifiersIsMutable();
        modifiers_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllModifiers(
          java.lang.Iterable<? extends com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.Modifier> values) {
        ensureModifiersIsMutable();
        super.addAll(values, modifiers_);
        onChanged();
        return this;
      }
      public Builder clearModifiers() {
        modifiers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.AndroidLog.LogHeader)
    }
    
    static {
      defaultInstance = new LogHeader(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.AndroidLog.LogHeader)
  }
  
  public interface LogPayloadOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string trace = 1;
    boolean hasTrace();
    String getTrace();
  }
  public static final class LogPayload extends
      com.google.protobuf.GeneratedMessage
      implements LogPayloadOrBuilder {
    // Use LogPayload.newBuilder() to construct.
    private LogPayload(Builder builder) {
      super(builder);
    }
    private LogPayload(boolean noInit) {}
    
    private static final LogPayload defaultInstance;
    public static LogPayload getDefaultInstance() {
      return defaultInstance;
    }
    
    public LogPayload getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogPayload_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogPayload_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string trace = 1;
    public static final int TRACE_FIELD_NUMBER = 1;
    private java.lang.Object trace_;
    public boolean hasTrace() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getTrace() {
      java.lang.Object ref = trace_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          trace_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTraceBytes() {
      java.lang.Object ref = trace_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        trace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      trace_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTrace()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTraceBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTraceBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogPayload_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogPayload_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        trace_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload build() {
        com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload buildPartial() {
        com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload result = new com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trace_ = trace_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload) {
          return mergeFrom((com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload other) {
        if (other == com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.getDefaultInstance()) return this;
        if (other.hasTrace()) {
          setTrace(other.getTrace());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTrace()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              trace_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string trace = 1;
      private java.lang.Object trace_ = "";
      public boolean hasTrace() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getTrace() {
        java.lang.Object ref = trace_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          trace_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTrace(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        trace_ = value;
        onChanged();
        return this;
      }
      public Builder clearTrace() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trace_ = getDefaultInstance().getTrace();
        onChanged();
        return this;
      }
      void setTrace(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        trace_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.AndroidLog.LogPayload)
    }
    
    static {
      defaultInstance = new LogPayload(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.AndroidLog.LogPayload)
  }
  
  public interface LogMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .TargetAgent.Protocol.AndroidLog.LogHeader header = 1;
    boolean hasHeader();
    com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader getHeader();
    com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeaderOrBuilder getHeaderOrBuilder();
    
    // repeated .TargetAgent.Protocol.AndroidLog.LogPayload content = 2;
    java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload> 
        getContentList();
    com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload getContent(int index);
    int getContentCount();
    java.util.List<? extends com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayloadOrBuilder> 
        getContentOrBuilderList();
    com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayloadOrBuilder getContentOrBuilder(
        int index);
  }
  public static final class LogMessage extends
      com.google.protobuf.GeneratedMessage
      implements LogMessageOrBuilder {
    // Use LogMessage.newBuilder() to construct.
    private LogMessage(Builder builder) {
      super(builder);
    }
    private LogMessage(boolean noInit) {}
    
    private static final LogMessage defaultInstance;
    public static LogMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public LogMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogMessage_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .TargetAgent.Protocol.AndroidLog.LogHeader header = 1;
    public static final int HEADER_FIELD_NUMBER = 1;
    private com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader header_;
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader getHeader() {
      return header_;
    }
    public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeaderOrBuilder getHeaderOrBuilder() {
      return header_;
    }
    
    // repeated .TargetAgent.Protocol.AndroidLog.LogPayload content = 2;
    public static final int CONTENT_FIELD_NUMBER = 2;
    private java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload> content_;
    public java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload> getContentList() {
      return content_;
    }
    public java.util.List<? extends com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayloadOrBuilder> 
        getContentOrBuilderList() {
      return content_;
    }
    public int getContentCount() {
      return content_.size();
    }
    public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload getContent(int index) {
      return content_.get(index);
    }
    public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayloadOrBuilder getContentOrBuilder(
        int index) {
      return content_.get(index);
    }
    
    private void initFields() {
      header_ = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.getDefaultInstance();
      content_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasHeader()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getContentCount(); i++) {
        if (!getContent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, header_);
      }
      for (int i = 0; i < content_.size(); i++) {
        output.writeMessage(2, content_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, header_);
      }
      for (int i = 0; i < content_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, content_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.internal_static_TargetAgent_Protocol_AndroidLog_LogMessage_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeaderFieldBuilder();
          getContentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.getDefaultInstance();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (contentBuilder_ == null) {
          content_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          contentBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage.getDescriptor();
      }
      
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage getDefaultInstanceForType() {
        return com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage build() {
        com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage buildPartial() {
        com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage result = new com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (contentBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            content_ = java.util.Collections.unmodifiableList(content_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.content_ = content_;
        } else {
          result.content_ = contentBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage) {
          return mergeFrom((com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage other) {
        if (other == com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (contentBuilder_ == null) {
          if (!other.content_.isEmpty()) {
            if (content_.isEmpty()) {
              content_ = other.content_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureContentIsMutable();
              content_.addAll(other.content_);
            }
            onChanged();
          }
        } else {
          if (!other.content_.isEmpty()) {
            if (contentBuilder_.isEmpty()) {
              contentBuilder_.dispose();
              contentBuilder_ = null;
              content_ = other.content_;
              bitField0_ = (bitField0_ & ~0x00000002);
              contentBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getContentFieldBuilder() : null;
            } else {
              contentBuilder_.addAllMessages(other.content_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasHeader()) {
          
          return false;
        }
        for (int i = 0; i < getContentCount(); i++) {
          if (!getContent(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.Builder subBuilder = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.newBuilder();
              if (hasHeader()) {
                subBuilder.mergeFrom(getHeader());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHeader(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder subBuilder = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addContent(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .TargetAgent.Protocol.AndroidLog.LogHeader header = 1;
      private com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader header_ = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.Builder, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeaderOrBuilder> headerBuilder_;
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader getHeader() {
        if (headerBuilder_ == null) {
          return header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      public Builder setHeader(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setHeader(
          com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeHeader(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              header_ != com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.getDefaultInstance()) {
            header_ =
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.getDefaultInstance();
          onChanged();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.Builder, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.Builder, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeaderOrBuilder>(
                  header_,
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }
      
      // repeated .TargetAgent.Protocol.AndroidLog.LogPayload content = 2;
      private java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload> content_ =
        java.util.Collections.emptyList();
      private void ensureContentIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          content_ = new java.util.ArrayList<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload>(content_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayloadOrBuilder> contentBuilder_;
      
      public java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload> getContentList() {
        if (contentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(content_);
        } else {
          return contentBuilder_.getMessageList();
        }
      }
      public int getContentCount() {
        if (contentBuilder_ == null) {
          return content_.size();
        } else {
          return contentBuilder_.getCount();
        }
      }
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload getContent(int index) {
        if (contentBuilder_ == null) {
          return content_.get(index);
        } else {
          return contentBuilder_.getMessage(index);
        }
      }
      public Builder setContent(
          int index, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload value) {
        if (contentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContentIsMutable();
          content_.set(index, value);
          onChanged();
        } else {
          contentBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setContent(
          int index, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder builderForValue) {
        if (contentBuilder_ == null) {
          ensureContentIsMutable();
          content_.set(index, builderForValue.build());
          onChanged();
        } else {
          contentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addContent(com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload value) {
        if (contentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContentIsMutable();
          content_.add(value);
          onChanged();
        } else {
          contentBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addContent(
          int index, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload value) {
        if (contentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContentIsMutable();
          content_.add(index, value);
          onChanged();
        } else {
          contentBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addContent(
          com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder builderForValue) {
        if (contentBuilder_ == null) {
          ensureContentIsMutable();
          content_.add(builderForValue.build());
          onChanged();
        } else {
          contentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addContent(
          int index, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder builderForValue) {
        if (contentBuilder_ == null) {
          ensureContentIsMutable();
          content_.add(index, builderForValue.build());
          onChanged();
        } else {
          contentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllContent(
          java.lang.Iterable<? extends com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload> values) {
        if (contentBuilder_ == null) {
          ensureContentIsMutable();
          super.addAll(values, content_);
          onChanged();
        } else {
          contentBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearContent() {
        if (contentBuilder_ == null) {
          content_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          contentBuilder_.clear();
        }
        return this;
      }
      public Builder removeContent(int index) {
        if (contentBuilder_ == null) {
          ensureContentIsMutable();
          content_.remove(index);
          onChanged();
        } else {
          contentBuilder_.remove(index);
        }
        return this;
      }
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder getContentBuilder(
          int index) {
        return getContentFieldBuilder().getBuilder(index);
      }
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayloadOrBuilder getContentOrBuilder(
          int index) {
        if (contentBuilder_ == null) {
          return content_.get(index);  } else {
          return contentBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayloadOrBuilder> 
           getContentOrBuilderList() {
        if (contentBuilder_ != null) {
          return contentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(content_);
        }
      }
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder addContentBuilder() {
        return getContentFieldBuilder().addBuilder(
            com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.getDefaultInstance());
      }
      public com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder addContentBuilder(
          int index) {
        return getContentFieldBuilder().addBuilder(
            index, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.getDefaultInstance());
      }
      public java.util.List<com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder> 
           getContentBuilderList() {
        return getContentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayloadOrBuilder> 
          getContentFieldBuilder() {
        if (contentBuilder_ == null) {
          contentBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder, com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayloadOrBuilder>(
                  content_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          content_ = null;
        }
        return contentBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:TargetAgent.Protocol.AndroidLog.LogMessage)
    }
    
    static {
      defaultInstance = new LogMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TargetAgent.Protocol.AndroidLog.LogMessage)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_AndroidLog_LogHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_AndroidLog_LogHeader_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_AndroidLog_LogPayload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_AndroidLog_LogPayload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TargetAgent_Protocol_AndroidLog_LogMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TargetAgent_Protocol_AndroidLog_LogMessage_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)target_agent_prot_androidlog_plugin.pr" +
      "oto\022\037TargetAgent.Protocol.AndroidLog\"\224\001\n" +
      "\tLogHeader\022I\n\006format\030\001 \001(\0162-.TargetAgent" +
      ".Protocol.AndroidLog.OutputFormat:\nTHREA" +
      "DTIME\022<\n\tmodifiers\030\002 \003(\0162).TargetAgent.P" +
      "rotocol.AndroidLog.Modifier\"\033\n\nLogPayloa" +
      "d\022\r\n\005trace\030\001 \002(\t\"\206\001\n\nLogMessage\022:\n\006heade" +
      "r\030\001 \002(\0132*.TargetAgent.Protocol.AndroidLo" +
      "g.LogHeader\022<\n\007content\030\002 \003(\0132+.TargetAge" +
      "nt.Protocol.AndroidLog.LogPayload*h\n\014Out",
      "putFormat\022\t\n\005BRIEF\020\000\022\010\n\004LONG\020\001\022\013\n\007PROCES" +
      "S\020\002\022\007\n\003RAW\020\003\022\007\n\003TAG\020\004\022\n\n\006THREAD\020\005\022\016\n\nTHR" +
      "EADTIME\020\006\022\010\n\004TIME\020\007*c\n\010Modifier\022\t\n\005EPOCH" +
      "\020\000\022\r\n\tMONOTONIC\020\001\022\r\n\tPRINTABLE\020\002\022\007\n\003UID\020" +
      "\003\022\010\n\004USEC\020\004\022\007\n\003UTC\020\005\022\010\n\004YEAR\020\006\022\010\n\004ZONE\020\007" +
      "BH\n3com.elektrobit.ebrace.targetdata.ada" +
      "pter.androidlogB\021AndroidLogTAProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_TargetAgent_Protocol_AndroidLog_LogHeader_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_TargetAgent_Protocol_AndroidLog_LogHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_AndroidLog_LogHeader_descriptor,
              new java.lang.String[] { "Format", "Modifiers", },
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.class,
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogHeader.Builder.class);
          internal_static_TargetAgent_Protocol_AndroidLog_LogPayload_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_TargetAgent_Protocol_AndroidLog_LogPayload_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_AndroidLog_LogPayload_descriptor,
              new java.lang.String[] { "Trace", },
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.class,
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogPayload.Builder.class);
          internal_static_TargetAgent_Protocol_AndroidLog_LogMessage_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_TargetAgent_Protocol_AndroidLog_LogMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TargetAgent_Protocol_AndroidLog_LogMessage_descriptor,
              new java.lang.String[] { "Header", "Content", },
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage.class,
              com.elektrobit.ebrace.targetdata.adapter.androidlog.AndroidLogTAProto.LogMessage.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
