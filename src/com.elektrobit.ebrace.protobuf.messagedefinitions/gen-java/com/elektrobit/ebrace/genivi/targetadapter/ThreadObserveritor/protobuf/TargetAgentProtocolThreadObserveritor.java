// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: target_agent_prot_thread_observer.proto

package com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf;

public final class TargetAgentProtocolThreadObserveritor {
  private TargetAgentProtocolThreadObserveritor() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum ThreadObserverMajorVersion
      implements com.google.protobuf.ProtocolMessageEnum {
    THREAD_OBS_MAJOR_VERSION(0, 1),
    ;
    
    public static final int THREAD_OBS_MAJOR_VERSION_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static ThreadObserverMajorVersion valueOf(int value) {
      switch (value) {
        case 1: return THREAD_OBS_MAJOR_VERSION;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ThreadObserverMajorVersion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ThreadObserverMajorVersion>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ThreadObserverMajorVersion>() {
            public ThreadObserverMajorVersion findValueByNumber(int number) {
              return ThreadObserverMajorVersion.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final ThreadObserverMajorVersion[] VALUES = {
      THREAD_OBS_MAJOR_VERSION, 
    };
    
    public static ThreadObserverMajorVersion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ThreadObserverMajorVersion(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:ThreadObserverMajorVersion)
  }
  
  public enum ThreadObserverMinorVersion
      implements com.google.protobuf.ProtocolMessageEnum {
    THREAD_OBS_MINOR_VERSION(0, 1),
    ;
    
    public static final int THREAD_OBS_MINOR_VERSION_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static ThreadObserverMinorVersion valueOf(int value) {
      switch (value) {
        case 1: return THREAD_OBS_MINOR_VERSION;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ThreadObserverMinorVersion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ThreadObserverMinorVersion>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ThreadObserverMinorVersion>() {
            public ThreadObserverMinorVersion findValueByNumber(int number) {
              return ThreadObserverMinorVersion.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final ThreadObserverMinorVersion[] VALUES = {
      THREAD_OBS_MINOR_VERSION, 
    };
    
    public static ThreadObserverMinorVersion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ThreadObserverMinorVersion(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:ThreadObserverMinorVersion)
  }
  
  public enum ThreadObserverOpCodes
      implements com.google.protobuf.ProtocolMessageEnum {
    THREAD_OBS_OP_MESSAGE_INVALID(0, 0),
    THREAD_OBS_OP_START_OBSERVING(1, 1),
    THREAD_OBS_OP_STOP_OBSERVING(2, 2),
    THREAD_OBS_OP_SET_SAMPLING_RATE(3, 3),
    THREAD_OBS_OP_PROTOCOL_VERSION(4, 4),
    THREAD_OBS_OP_RESSOURCE_INFO(5, 5),
    ;
    
    public static final int THREAD_OBS_OP_MESSAGE_INVALID_VALUE = 0;
    public static final int THREAD_OBS_OP_START_OBSERVING_VALUE = 1;
    public static final int THREAD_OBS_OP_STOP_OBSERVING_VALUE = 2;
    public static final int THREAD_OBS_OP_SET_SAMPLING_RATE_VALUE = 3;
    public static final int THREAD_OBS_OP_PROTOCOL_VERSION_VALUE = 4;
    public static final int THREAD_OBS_OP_RESSOURCE_INFO_VALUE = 5;
    
    
    public final int getNumber() { return value; }
    
    public static ThreadObserverOpCodes valueOf(int value) {
      switch (value) {
        case 0: return THREAD_OBS_OP_MESSAGE_INVALID;
        case 1: return THREAD_OBS_OP_START_OBSERVING;
        case 2: return THREAD_OBS_OP_STOP_OBSERVING;
        case 3: return THREAD_OBS_OP_SET_SAMPLING_RATE;
        case 4: return THREAD_OBS_OP_PROTOCOL_VERSION;
        case 5: return THREAD_OBS_OP_RESSOURCE_INFO;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ThreadObserverOpCodes>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ThreadObserverOpCodes>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ThreadObserverOpCodes>() {
            public ThreadObserverOpCodes findValueByNumber(int number) {
              return ThreadObserverOpCodes.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final ThreadObserverOpCodes[] VALUES = {
      THREAD_OBS_OP_MESSAGE_INVALID, THREAD_OBS_OP_START_OBSERVING, THREAD_OBS_OP_STOP_OBSERVING, THREAD_OBS_OP_SET_SAMPLING_RATE, THREAD_OBS_OP_PROTOCOL_VERSION, THREAD_OBS_OP_RESSOURCE_INFO, 
    };
    
    public static ThreadObserverOpCodes valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ThreadObserverOpCodes(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:ThreadObserverOpCodes)
  }
  
  public enum ThreadObserverCommandErrorCodes
      implements com.google.protobuf.ProtocolMessageEnum {
    THREAD_OBS_RESULT_INVALID(0, 0),
    THREAD_OBS_RESULT_SUCCESS(1, 1),
    THREAD_OBS_RESULT_PARAM_WRONG(2, 2),
    THREAD_OBS_RESULT_EXEC_ERROR(3, 3),
    THREAD_OBS_RESULT_PARSE_ERROR(4, 4),
    THREAD_OBS_RESULT_SPECIFIC(5, 5),
    ;
    
    public static final int THREAD_OBS_RESULT_INVALID_VALUE = 0;
    public static final int THREAD_OBS_RESULT_SUCCESS_VALUE = 1;
    public static final int THREAD_OBS_RESULT_PARAM_WRONG_VALUE = 2;
    public static final int THREAD_OBS_RESULT_EXEC_ERROR_VALUE = 3;
    public static final int THREAD_OBS_RESULT_PARSE_ERROR_VALUE = 4;
    public static final int THREAD_OBS_RESULT_SPECIFIC_VALUE = 5;
    
    
    public final int getNumber() { return value; }
    
    public static ThreadObserverCommandErrorCodes valueOf(int value) {
      switch (value) {
        case 0: return THREAD_OBS_RESULT_INVALID;
        case 1: return THREAD_OBS_RESULT_SUCCESS;
        case 2: return THREAD_OBS_RESULT_PARAM_WRONG;
        case 3: return THREAD_OBS_RESULT_EXEC_ERROR;
        case 4: return THREAD_OBS_RESULT_PARSE_ERROR;
        case 5: return THREAD_OBS_RESULT_SPECIFIC;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ThreadObserverCommandErrorCodes>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ThreadObserverCommandErrorCodes>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ThreadObserverCommandErrorCodes>() {
            public ThreadObserverCommandErrorCodes findValueByNumber(int number) {
              return ThreadObserverCommandErrorCodes.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.getDescriptor().getEnumTypes().get(3);
    }
    
    private static final ThreadObserverCommandErrorCodes[] VALUES = {
      THREAD_OBS_RESULT_INVALID, THREAD_OBS_RESULT_SUCCESS, THREAD_OBS_RESULT_PARAM_WRONG, THREAD_OBS_RESULT_EXEC_ERROR, THREAD_OBS_RESULT_PARSE_ERROR, THREAD_OBS_RESULT_SPECIFIC, 
    };
    
    public static ThreadObserverCommandErrorCodes valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ThreadObserverCommandErrorCodes(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:ThreadObserverCommandErrorCodes)
  }
  
  public enum ThreadObserverOpType
      implements com.google.protobuf.ProtocolMessageEnum {
    THREAD_OBS_OPTYPE_INVALID(0, 0),
    THREAD_OBS_OPTYPE_REQUEST(1, 1),
    THREAD_OBS_OPTYPE_RESPONSE(2, 2),
    THREAD_OBS_OPTYPE_NOTIFY(3, 3),
    ;
    
    public static final int THREAD_OBS_OPTYPE_INVALID_VALUE = 0;
    public static final int THREAD_OBS_OPTYPE_REQUEST_VALUE = 1;
    public static final int THREAD_OBS_OPTYPE_RESPONSE_VALUE = 2;
    public static final int THREAD_OBS_OPTYPE_NOTIFY_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static ThreadObserverOpType valueOf(int value) {
      switch (value) {
        case 0: return THREAD_OBS_OPTYPE_INVALID;
        case 1: return THREAD_OBS_OPTYPE_REQUEST;
        case 2: return THREAD_OBS_OPTYPE_RESPONSE;
        case 3: return THREAD_OBS_OPTYPE_NOTIFY;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ThreadObserverOpType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ThreadObserverOpType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ThreadObserverOpType>() {
            public ThreadObserverOpType findValueByNumber(int number) {
              return ThreadObserverOpType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.getDescriptor().getEnumTypes().get(4);
    }
    
    private static final ThreadObserverOpType[] VALUES = {
      THREAD_OBS_OPTYPE_INVALID, THREAD_OBS_OPTYPE_REQUEST, THREAD_OBS_OPTYPE_RESPONSE, THREAD_OBS_OPTYPE_NOTIFY, 
    };
    
    public static ThreadObserverOpType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ThreadObserverOpType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:ThreadObserverOpType)
  }
  
  public interface ThreadObserverApplicationMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .ThreadObserverOpCodes messageID = 1;
    boolean hasMessageID();
    com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes getMessageID();
    
    // required .ThreadObserverOpType operationType = 2;
    boolean hasOperationType();
    com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType getOperationType();
    
    // optional .ThreadObserverCommandErrorCodes errorCodes = 3;
    boolean hasErrorCodes();
    com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes getErrorCodes();
    
    // optional .ThreadObserverContextInfo context = 4;
    boolean hasContext();
    com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo getContext();
    com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfoOrBuilder getContextOrBuilder();
    
    // optional .ThreadObserverVersionInfo versionInfo = 5;
    boolean hasVersionInfo();
    com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo getVersionInfo();
    com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfoOrBuilder getVersionInfoOrBuilder();
    
    // optional .ThreadObserverResourceInfo resourceInfo = 6;
    boolean hasResourceInfo();
    com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo getResourceInfo();
    com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfoOrBuilder getResourceInfoOrBuilder();
  }
  public static final class ThreadObserverApplicationMessage extends
      com.google.protobuf.GeneratedMessage
      implements ThreadObserverApplicationMessageOrBuilder {
    // Use ThreadObserverApplicationMessage.newBuilder() to construct.
    private ThreadObserverApplicationMessage(Builder builder) {
      super(builder);
    }
    private ThreadObserverApplicationMessage(boolean noInit) {}
    
    private static final ThreadObserverApplicationMessage defaultInstance;
    public static ThreadObserverApplicationMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public ThreadObserverApplicationMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverApplicationMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverApplicationMessage_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .ThreadObserverOpCodes messageID = 1;
    public static final int MESSAGEID_FIELD_NUMBER = 1;
    private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes messageID_;
    public boolean hasMessageID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes getMessageID() {
      return messageID_;
    }
    
    // required .ThreadObserverOpType operationType = 2;
    public static final int OPERATIONTYPE_FIELD_NUMBER = 2;
    private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType operationType_;
    public boolean hasOperationType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType getOperationType() {
      return operationType_;
    }
    
    // optional .ThreadObserverCommandErrorCodes errorCodes = 3;
    public static final int ERRORCODES_FIELD_NUMBER = 3;
    private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes errorCodes_;
    public boolean hasErrorCodes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes getErrorCodes() {
      return errorCodes_;
    }
    
    // optional .ThreadObserverContextInfo context = 4;
    public static final int CONTEXT_FIELD_NUMBER = 4;
    private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo context_;
    public boolean hasContext() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo getContext() {
      return context_;
    }
    public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfoOrBuilder getContextOrBuilder() {
      return context_;
    }
    
    // optional .ThreadObserverVersionInfo versionInfo = 5;
    public static final int VERSIONINFO_FIELD_NUMBER = 5;
    private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo versionInfo_;
    public boolean hasVersionInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo getVersionInfo() {
      return versionInfo_;
    }
    public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfoOrBuilder getVersionInfoOrBuilder() {
      return versionInfo_;
    }
    
    // optional .ThreadObserverResourceInfo resourceInfo = 6;
    public static final int RESOURCEINFO_FIELD_NUMBER = 6;
    private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo resourceInfo_;
    public boolean hasResourceInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo getResourceInfo() {
      return resourceInfo_;
    }
    public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfoOrBuilder getResourceInfoOrBuilder() {
      return resourceInfo_;
    }
    
    private void initFields() {
      messageID_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes.THREAD_OBS_OP_MESSAGE_INVALID;
      operationType_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType.THREAD_OBS_OPTYPE_INVALID;
      errorCodes_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes.THREAD_OBS_RESULT_INVALID;
      context_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.getDefaultInstance();
      versionInfo_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.getDefaultInstance();
      resourceInfo_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMessageID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOperationType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasContext()) {
        if (!getContext().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasVersionInfo()) {
        if (!getVersionInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasResourceInfo()) {
        if (!getResourceInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, messageID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, operationType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, errorCodes_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, context_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, versionInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, resourceInfo_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageID_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, operationType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, errorCodes_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, context_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, versionInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, resourceInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverApplicationMessage_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverApplicationMessage_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getContextFieldBuilder();
          getVersionInfoFieldBuilder();
          getResourceInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        messageID_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes.THREAD_OBS_OP_MESSAGE_INVALID;
        bitField0_ = (bitField0_ & ~0x00000001);
        operationType_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType.THREAD_OBS_OPTYPE_INVALID;
        bitField0_ = (bitField0_ & ~0x00000002);
        errorCodes_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes.THREAD_OBS_RESULT_INVALID;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (contextBuilder_ == null) {
          context_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.getDefaultInstance();
        } else {
          contextBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (versionInfoBuilder_ == null) {
          versionInfo_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.getDefaultInstance();
        } else {
          versionInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (resourceInfoBuilder_ == null) {
          resourceInfo_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.getDefaultInstance();
        } else {
          resourceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage.getDescriptor();
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage getDefaultInstanceForType() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage build() {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage buildPartial() {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage result = new com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageID_ = messageID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.operationType_ = operationType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.errorCodes_ = errorCodes_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (contextBuilder_ == null) {
          result.context_ = context_;
        } else {
          result.context_ = contextBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (versionInfoBuilder_ == null) {
          result.versionInfo_ = versionInfo_;
        } else {
          result.versionInfo_ = versionInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (resourceInfoBuilder_ == null) {
          result.resourceInfo_ = resourceInfo_;
        } else {
          result.resourceInfo_ = resourceInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage) {
          return mergeFrom((com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage other) {
        if (other == com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage.getDefaultInstance()) return this;
        if (other.hasMessageID()) {
          setMessageID(other.getMessageID());
        }
        if (other.hasOperationType()) {
          setOperationType(other.getOperationType());
        }
        if (other.hasErrorCodes()) {
          setErrorCodes(other.getErrorCodes());
        }
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        if (other.hasVersionInfo()) {
          mergeVersionInfo(other.getVersionInfo());
        }
        if (other.hasResourceInfo()) {
          mergeResourceInfo(other.getResourceInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMessageID()) {
          
          return false;
        }
        if (!hasOperationType()) {
          
          return false;
        }
        if (hasContext()) {
          if (!getContext().isInitialized()) {
            
            return false;
          }
        }
        if (hasVersionInfo()) {
          if (!getVersionInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasResourceInfo()) {
          if (!getResourceInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes value = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                messageID_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType value = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                operationType_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes value = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                errorCodes_ = value;
              }
              break;
            }
            case 34: {
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.Builder subBuilder = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.newBuilder();
              if (hasContext()) {
                subBuilder.mergeFrom(getContext());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setContext(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.Builder subBuilder = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.newBuilder();
              if (hasVersionInfo()) {
                subBuilder.mergeFrom(getVersionInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVersionInfo(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.Builder subBuilder = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.newBuilder();
              if (hasResourceInfo()) {
                subBuilder.mergeFrom(getResourceInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResourceInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .ThreadObserverOpCodes messageID = 1;
      private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes messageID_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes.THREAD_OBS_OP_MESSAGE_INVALID;
      public boolean hasMessageID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes getMessageID() {
        return messageID_;
      }
      public Builder setMessageID(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        messageID_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessageID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageID_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpCodes.THREAD_OBS_OP_MESSAGE_INVALID;
        onChanged();
        return this;
      }
      
      // required .ThreadObserverOpType operationType = 2;
      private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType operationType_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType.THREAD_OBS_OPTYPE_INVALID;
      public boolean hasOperationType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType getOperationType() {
        return operationType_;
      }
      public Builder setOperationType(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        operationType_ = value;
        onChanged();
        return this;
      }
      public Builder clearOperationType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operationType_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverOpType.THREAD_OBS_OPTYPE_INVALID;
        onChanged();
        return this;
      }
      
      // optional .ThreadObserverCommandErrorCodes errorCodes = 3;
      private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes errorCodes_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes.THREAD_OBS_RESULT_INVALID;
      public boolean hasErrorCodes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes getErrorCodes() {
        return errorCodes_;
      }
      public Builder setErrorCodes(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        errorCodes_ = value;
        onChanged();
        return this;
      }
      public Builder clearErrorCodes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        errorCodes_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverCommandErrorCodes.THREAD_OBS_RESULT_INVALID;
        onChanged();
        return this;
      }
      
      // optional .ThreadObserverContextInfo context = 4;
      private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo context_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.Builder, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfoOrBuilder> contextBuilder_;
      public boolean hasContext() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo getContext() {
        if (contextBuilder_ == null) {
          return context_;
        } else {
          return contextBuilder_.getMessage();
        }
      }
      public Builder setContext(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo value) {
        if (contextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          context_ = value;
          onChanged();
        } else {
          contextBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setContext(
          com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.Builder builderForValue) {
        if (contextBuilder_ == null) {
          context_ = builderForValue.build();
          onChanged();
        } else {
          contextBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeContext(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo value) {
        if (contextBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              context_ != com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.getDefaultInstance()) {
            context_ =
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.newBuilder(context_).mergeFrom(value).buildPartial();
          } else {
            context_ = value;
          }
          onChanged();
        } else {
          contextBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearContext() {
        if (contextBuilder_ == null) {
          context_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.getDefaultInstance();
          onChanged();
        } else {
          contextBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.Builder getContextBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getContextFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfoOrBuilder getContextOrBuilder() {
        if (contextBuilder_ != null) {
          return contextBuilder_.getMessageOrBuilder();
        } else {
          return context_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.Builder, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfoOrBuilder> 
          getContextFieldBuilder() {
        if (contextBuilder_ == null) {
          contextBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.Builder, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfoOrBuilder>(
                  context_,
                  getParentForChildren(),
                  isClean());
          context_ = null;
        }
        return contextBuilder_;
      }
      
      // optional .ThreadObserverVersionInfo versionInfo = 5;
      private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo versionInfo_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.Builder, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfoOrBuilder> versionInfoBuilder_;
      public boolean hasVersionInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo getVersionInfo() {
        if (versionInfoBuilder_ == null) {
          return versionInfo_;
        } else {
          return versionInfoBuilder_.getMessage();
        }
      }
      public Builder setVersionInfo(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo value) {
        if (versionInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          versionInfo_ = value;
          onChanged();
        } else {
          versionInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setVersionInfo(
          com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.Builder builderForValue) {
        if (versionInfoBuilder_ == null) {
          versionInfo_ = builderForValue.build();
          onChanged();
        } else {
          versionInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeVersionInfo(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo value) {
        if (versionInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              versionInfo_ != com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.getDefaultInstance()) {
            versionInfo_ =
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.newBuilder(versionInfo_).mergeFrom(value).buildPartial();
          } else {
            versionInfo_ = value;
          }
          onChanged();
        } else {
          versionInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearVersionInfo() {
        if (versionInfoBuilder_ == null) {
          versionInfo_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.getDefaultInstance();
          onChanged();
        } else {
          versionInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.Builder getVersionInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getVersionInfoFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfoOrBuilder getVersionInfoOrBuilder() {
        if (versionInfoBuilder_ != null) {
          return versionInfoBuilder_.getMessageOrBuilder();
        } else {
          return versionInfo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.Builder, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfoOrBuilder> 
          getVersionInfoFieldBuilder() {
        if (versionInfoBuilder_ == null) {
          versionInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.Builder, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfoOrBuilder>(
                  versionInfo_,
                  getParentForChildren(),
                  isClean());
          versionInfo_ = null;
        }
        return versionInfoBuilder_;
      }
      
      // optional .ThreadObserverResourceInfo resourceInfo = 6;
      private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo resourceInfo_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.Builder, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfoOrBuilder> resourceInfoBuilder_;
      public boolean hasResourceInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo getResourceInfo() {
        if (resourceInfoBuilder_ == null) {
          return resourceInfo_;
        } else {
          return resourceInfoBuilder_.getMessage();
        }
      }
      public Builder setResourceInfo(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo value) {
        if (resourceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resourceInfo_ = value;
          onChanged();
        } else {
          resourceInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder setResourceInfo(
          com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.Builder builderForValue) {
        if (resourceInfoBuilder_ == null) {
          resourceInfo_ = builderForValue.build();
          onChanged();
        } else {
          resourceInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder mergeResourceInfo(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo value) {
        if (resourceInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              resourceInfo_ != com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.getDefaultInstance()) {
            resourceInfo_ =
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.newBuilder(resourceInfo_).mergeFrom(value).buildPartial();
          } else {
            resourceInfo_ = value;
          }
          onChanged();
        } else {
          resourceInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder clearResourceInfo() {
        if (resourceInfoBuilder_ == null) {
          resourceInfo_ = com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.getDefaultInstance();
          onChanged();
        } else {
          resourceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.Builder getResourceInfoBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getResourceInfoFieldBuilder().getBuilder();
      }
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfoOrBuilder getResourceInfoOrBuilder() {
        if (resourceInfoBuilder_ != null) {
          return resourceInfoBuilder_.getMessageOrBuilder();
        } else {
          return resourceInfo_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.Builder, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfoOrBuilder> 
          getResourceInfoFieldBuilder() {
        if (resourceInfoBuilder_ == null) {
          resourceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.Builder, com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfoOrBuilder>(
                  resourceInfo_,
                  getParentForChildren(),
                  isClean());
          resourceInfo_ = null;
        }
        return resourceInfoBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:ThreadObserverApplicationMessage)
    }
    
    static {
      defaultInstance = new ThreadObserverApplicationMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ThreadObserverApplicationMessage)
  }
  
  public interface ThreadObserverVersionInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 majorVersion = 1;
    boolean hasMajorVersion();
    int getMajorVersion();
    
    // required int32 minorVersion = 2;
    boolean hasMinorVersion();
    int getMinorVersion();
  }
  public static final class ThreadObserverVersionInfo extends
      com.google.protobuf.GeneratedMessage
      implements ThreadObserverVersionInfoOrBuilder {
    // Use ThreadObserverVersionInfo.newBuilder() to construct.
    private ThreadObserverVersionInfo(Builder builder) {
      super(builder);
    }
    private ThreadObserverVersionInfo(boolean noInit) {}
    
    private static final ThreadObserverVersionInfo defaultInstance;
    public static ThreadObserverVersionInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ThreadObserverVersionInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverVersionInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverVersionInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 majorVersion = 1;
    public static final int MAJORVERSION_FIELD_NUMBER = 1;
    private int majorVersion_;
    public boolean hasMajorVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getMajorVersion() {
      return majorVersion_;
    }
    
    // required int32 minorVersion = 2;
    public static final int MINORVERSION_FIELD_NUMBER = 2;
    private int minorVersion_;
    public boolean hasMinorVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getMinorVersion() {
      return minorVersion_;
    }
    
    private void initFields() {
      majorVersion_ = 0;
      minorVersion_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMajorVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinorVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, majorVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, minorVersion_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, majorVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minorVersion_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverVersionInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverVersionInfo_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        majorVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        minorVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.getDescriptor();
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo getDefaultInstanceForType() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo build() {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo buildPartial() {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo result = new com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.majorVersion_ = majorVersion_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minorVersion_ = minorVersion_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo) {
          return mergeFrom((com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo other) {
        if (other == com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.getDefaultInstance()) return this;
        if (other.hasMajorVersion()) {
          setMajorVersion(other.getMajorVersion());
        }
        if (other.hasMinorVersion()) {
          setMinorVersion(other.getMinorVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMajorVersion()) {
          
          return false;
        }
        if (!hasMinorVersion()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              majorVersion_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minorVersion_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 majorVersion = 1;
      private int majorVersion_ ;
      public boolean hasMajorVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMajorVersion() {
        return majorVersion_;
      }
      public Builder setMajorVersion(int value) {
        bitField0_ |= 0x00000001;
        majorVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearMajorVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        majorVersion_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 minorVersion = 2;
      private int minorVersion_ ;
      public boolean hasMinorVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getMinorVersion() {
        return minorVersion_;
      }
      public Builder setMinorVersion(int value) {
        bitField0_ |= 0x00000002;
        minorVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearMinorVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minorVersion_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ThreadObserverVersionInfo)
    }
    
    static {
      defaultInstance = new ThreadObserverVersionInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ThreadObserverVersionInfo)
  }
  
  public interface ThreadObserverContextInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 cmdSpecificCode = 1;
    boolean hasCmdSpecificCode();
    int getCmdSpecificCode();
  }
  public static final class ThreadObserverContextInfo extends
      com.google.protobuf.GeneratedMessage
      implements ThreadObserverContextInfoOrBuilder {
    // Use ThreadObserverContextInfo.newBuilder() to construct.
    private ThreadObserverContextInfo(Builder builder) {
      super(builder);
    }
    private ThreadObserverContextInfo(boolean noInit) {}
    
    private static final ThreadObserverContextInfo defaultInstance;
    public static ThreadObserverContextInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ThreadObserverContextInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverContextInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverContextInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 cmdSpecificCode = 1;
    public static final int CMDSPECIFICCODE_FIELD_NUMBER = 1;
    private int cmdSpecificCode_;
    public boolean hasCmdSpecificCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCmdSpecificCode() {
      return cmdSpecificCode_;
    }
    
    private void initFields() {
      cmdSpecificCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasCmdSpecificCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, cmdSpecificCode_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, cmdSpecificCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverContextInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverContextInfo_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cmdSpecificCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.getDescriptor();
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo getDefaultInstanceForType() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo build() {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo buildPartial() {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo result = new com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cmdSpecificCode_ = cmdSpecificCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo) {
          return mergeFrom((com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo other) {
        if (other == com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.getDefaultInstance()) return this;
        if (other.hasCmdSpecificCode()) {
          setCmdSpecificCode(other.getCmdSpecificCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasCmdSpecificCode()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cmdSpecificCode_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 cmdSpecificCode = 1;
      private int cmdSpecificCode_ ;
      public boolean hasCmdSpecificCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCmdSpecificCode() {
        return cmdSpecificCode_;
      }
      public Builder setCmdSpecificCode(int value) {
        bitField0_ |= 0x00000001;
        cmdSpecificCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearCmdSpecificCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cmdSpecificCode_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ThreadObserverContextInfo)
    }
    
    static {
      defaultInstance = new ThreadObserverContextInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ThreadObserverContextInfo)
  }
  
  public interface ThreadObserverResourceInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 pid = 1;
    boolean hasPid();
    int getPid();
    
    // required uint32 tid = 2;
    boolean hasTid();
    int getTid();
    
    // required string tname = 3;
    boolean hasTname();
    String getTname();
    
    // required string cpuUsage = 4;
    boolean hasCpuUsage();
    String getCpuUsage();
  }
  public static final class ThreadObserverResourceInfo extends
      com.google.protobuf.GeneratedMessage
      implements ThreadObserverResourceInfoOrBuilder {
    // Use ThreadObserverResourceInfo.newBuilder() to construct.
    private ThreadObserverResourceInfo(Builder builder) {
      super(builder);
    }
    private ThreadObserverResourceInfo(boolean noInit) {}
    
    private static final ThreadObserverResourceInfo defaultInstance;
    public static ThreadObserverResourceInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ThreadObserverResourceInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverResourceInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverResourceInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 pid = 1;
    public static final int PID_FIELD_NUMBER = 1;
    private int pid_;
    public boolean hasPid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPid() {
      return pid_;
    }
    
    // required uint32 tid = 2;
    public static final int TID_FIELD_NUMBER = 2;
    private int tid_;
    public boolean hasTid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTid() {
      return tid_;
    }
    
    // required string tname = 3;
    public static final int TNAME_FIELD_NUMBER = 3;
    private java.lang.Object tname_;
    public boolean hasTname() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getTname() {
      java.lang.Object ref = tname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          tname_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTnameBytes() {
      java.lang.Object ref = tname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        tname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string cpuUsage = 4;
    public static final int CPUUSAGE_FIELD_NUMBER = 4;
    private java.lang.Object cpuUsage_;
    public boolean hasCpuUsage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getCpuUsage() {
      java.lang.Object ref = cpuUsage_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          cpuUsage_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCpuUsageBytes() {
      java.lang.Object ref = cpuUsage_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        cpuUsage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      pid_ = 0;
      tid_ = 0;
      tname_ = "";
      cpuUsage_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCpuUsage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, pid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTnameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getCpuUsageBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, pid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTnameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getCpuUsageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverResourceInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.internal_static_ThreadObserverResourceInfo_fieldAccessorTable;
      }
      
      // Construct using com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        pid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        tname_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        cpuUsage_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.getDescriptor();
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo getDefaultInstanceForType() {
        return com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.getDefaultInstance();
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo build() {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo buildPartial() {
        com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo result = new com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pid_ = pid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tid_ = tid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tname_ = tname_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cpuUsage_ = cpuUsage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo) {
          return mergeFrom((com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo other) {
        if (other == com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.getDefaultInstance()) return this;
        if (other.hasPid()) {
          setPid(other.getPid());
        }
        if (other.hasTid()) {
          setTid(other.getTid());
        }
        if (other.hasTname()) {
          setTname(other.getTname());
        }
        if (other.hasCpuUsage()) {
          setCpuUsage(other.getCpuUsage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPid()) {
          
          return false;
        }
        if (!hasTid()) {
          
          return false;
        }
        if (!hasTname()) {
          
          return false;
        }
        if (!hasCpuUsage()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pid_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tid_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              tname_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              cpuUsage_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 pid = 1;
      private int pid_ ;
      public boolean hasPid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPid() {
        return pid_;
      }
      public Builder setPid(int value) {
        bitField0_ |= 0x00000001;
        pid_ = value;
        onChanged();
        return this;
      }
      public Builder clearPid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pid_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 tid = 2;
      private int tid_ ;
      public boolean hasTid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTid() {
        return tid_;
      }
      public Builder setTid(int value) {
        bitField0_ |= 0x00000002;
        tid_ = value;
        onChanged();
        return this;
      }
      public Builder clearTid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tid_ = 0;
        onChanged();
        return this;
      }
      
      // required string tname = 3;
      private java.lang.Object tname_ = "";
      public boolean hasTname() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getTname() {
        java.lang.Object ref = tname_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          tname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        tname_ = value;
        onChanged();
        return this;
      }
      public Builder clearTname() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tname_ = getDefaultInstance().getTname();
        onChanged();
        return this;
      }
      void setTname(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        tname_ = value;
        onChanged();
      }
      
      // required string cpuUsage = 4;
      private java.lang.Object cpuUsage_ = "";
      public boolean hasCpuUsage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getCpuUsage() {
        java.lang.Object ref = cpuUsage_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          cpuUsage_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCpuUsage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        cpuUsage_ = value;
        onChanged();
        return this;
      }
      public Builder clearCpuUsage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cpuUsage_ = getDefaultInstance().getCpuUsage();
        onChanged();
        return this;
      }
      void setCpuUsage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        cpuUsage_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:ThreadObserverResourceInfo)
    }
    
    static {
      defaultInstance = new ThreadObserverResourceInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ThreadObserverResourceInfo)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ThreadObserverApplicationMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ThreadObserverApplicationMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ThreadObserverVersionInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ThreadObserverVersionInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ThreadObserverContextInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ThreadObserverContextInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ThreadObserverResourceInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ThreadObserverResourceInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'target_agent_prot_thread_observer.prot" +
      "o\"\302\002\n ThreadObserverApplicationMessage\022)" +
      "\n\tmessageID\030\001 \002(\0162\026.ThreadObserverOpCode" +
      "s\022,\n\roperationType\030\002 \002(\0162\025.ThreadObserve" +
      "rOpType\0224\n\nerrorCodes\030\003 \001(\0162 .ThreadObse" +
      "rverCommandErrorCodes\022+\n\007context\030\004 \001(\0132\032" +
      ".ThreadObserverContextInfo\022/\n\013versionInf" +
      "o\030\005 \001(\0132\032.ThreadObserverVersionInfo\0221\n\014r" +
      "esourceInfo\030\006 \001(\0132\033.ThreadObserverResour" +
      "ceInfo\"G\n\031ThreadObserverVersionInfo\022\024\n\014m",
      "ajorVersion\030\001 \002(\005\022\024\n\014minorVersion\030\002 \002(\005\"" +
      "4\n\031ThreadObserverContextInfo\022\027\n\017cmdSpeci" +
      "ficCode\030\001 \002(\r\"W\n\032ThreadObserverResourceI" +
      "nfo\022\013\n\003pid\030\001 \002(\r\022\013\n\003tid\030\002 \002(\r\022\r\n\005tname\030\003" +
      " \002(\t\022\020\n\010cpuUsage\030\004 \002(\t*:\n\032ThreadObserver" +
      "MajorVersion\022\034\n\030THREAD_OBS_MAJOR_VERSION" +
      "\020\001*:\n\032ThreadObserverMinorVersion\022\034\n\030THRE" +
      "AD_OBS_MINOR_VERSION\020\001*\352\001\n\025ThreadObserve" +
      "rOpCodes\022!\n\035THREAD_OBS_OP_MESSAGE_INVALI" +
      "D\020\000\022!\n\035THREAD_OBS_OP_START_OBSERVING\020\001\022 ",
      "\n\034THREAD_OBS_OP_STOP_OBSERVING\020\002\022#\n\037THRE" +
      "AD_OBS_OP_SET_SAMPLING_RATE\020\003\022\"\n\036THREAD_" +
      "OBS_OP_PROTOCOL_VERSION\020\004\022 \n\034THREAD_OBS_" +
      "OP_RESSOURCE_INFO\020\005*\347\001\n\037ThreadObserverCo" +
      "mmandErrorCodes\022\035\n\031THREAD_OBS_RESULT_INV" +
      "ALID\020\000\022\035\n\031THREAD_OBS_RESULT_SUCCESS\020\001\022!\n" +
      "\035THREAD_OBS_RESULT_PARAM_WRONG\020\002\022 \n\034THRE" +
      "AD_OBS_RESULT_EXEC_ERROR\020\003\022!\n\035THREAD_OBS" +
      "_RESULT_PARSE_ERROR\020\004\022\036\n\032THREAD_OBS_RESU" +
      "LT_SPECIFIC\020\005*\222\001\n\024ThreadObserverOpType\022\035",
      "\n\031THREAD_OBS_OPTYPE_INVALID\020\000\022\035\n\031THREAD_" +
      "OBS_OPTYPE_REQUEST\020\001\022\036\n\032THREAD_OBS_OPTYP" +
      "E_RESPONSE\020\002\022\034\n\030THREAD_OBS_OPTYPE_NOTIFY" +
      "\020\003Bo\nFcom.elektrobit.ebrace.genivi.targe" +
      "tadapter.ThreadObserveritor.protobufB%Ta" +
      "rgetAgentProtocolThreadObserveritor"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ThreadObserverApplicationMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ThreadObserverApplicationMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ThreadObserverApplicationMessage_descriptor,
              new java.lang.String[] { "MessageID", "OperationType", "ErrorCodes", "Context", "VersionInfo", "ResourceInfo", },
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage.class,
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverApplicationMessage.Builder.class);
          internal_static_ThreadObserverVersionInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ThreadObserverVersionInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ThreadObserverVersionInfo_descriptor,
              new java.lang.String[] { "MajorVersion", "MinorVersion", },
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.class,
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverVersionInfo.Builder.class);
          internal_static_ThreadObserverContextInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_ThreadObserverContextInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ThreadObserverContextInfo_descriptor,
              new java.lang.String[] { "CmdSpecificCode", },
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.class,
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverContextInfo.Builder.class);
          internal_static_ThreadObserverResourceInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_ThreadObserverResourceInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ThreadObserverResourceInfo_descriptor,
              new java.lang.String[] { "Pid", "Tid", "Tname", "CpuUsage", },
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.class,
              com.elektrobit.ebrace.genivi.targetadapter.ThreadObserveritor.protobuf.TargetAgentProtocolThreadObserveritor.ThreadObserverResourceInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
